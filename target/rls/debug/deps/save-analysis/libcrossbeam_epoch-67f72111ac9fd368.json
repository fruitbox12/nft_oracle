{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7","program":"/Users/samundrakarki/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=67f72111ac9fd368","-C","extra-filename=-67f72111ac9fd368","--out-dir","/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps","-L","dependency=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps","--extern","cfg_if=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libcfg_if-ecc1cdede2b52b83.rmeta","--extern","crossbeam_utils=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libcrossbeam_utils-2f0ed0170fd44e42.rmeta","--extern","lazy_static=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/liblazy_static-8189579e1aece32e.rmeta","--extern","memoffset=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libmemoffset-a5fba87d94e9f1c8.rmeta","--extern","scopeguard=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libscopeguard-a32544a2a81bcd62.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/samundrakarki/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libcrossbeam_epoch-67f72111ac9fd368.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[13523894768937678982,0]},"crate_root":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src","external_crates":[{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18209756222486151562,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18223145686901155897,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14433101958683640425,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15722400896539721154,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[382214965992916939,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12260471395692023054,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15696538619420672016,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15516093453040911438,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14430044855280342380,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[22492058053637715,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1365830122759399854,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[2559965663903648119,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15316470272468687976,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[643092319478642194,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[981374929740806444,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10791241492110567838,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[7534896682886677764,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[17816606192966835472,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":19,"id":{"name":"lazy_static","disambiguator":[2782836759144143816,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","num":20,"id":{"name":"crossbeam_utils","disambiguator":[10817410934803194624,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","num":21,"id":{"name":"scopeguard","disambiguator":[17903739936202682887,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","num":22,"id":{"name":"memoffset","disambiguator":[5334236720615381867,0]}}],"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6724,"byte_end":6733,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6735,"byte_end":6741,"line_start":170,"line_end":170,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6743,"byte_end":6763,"line_start":170,"line_end":170,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6777,"byte_end":6782,"line_start":171,"line_end":171,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6784,"byte_end":6791,"line_start":171,"line_end":171,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6793,"byte_end":6799,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6846,"byte_end":6855,"line_start":173,"line_end":173,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6857,"byte_end":6868,"line_start":173,"line_end":173,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6901,"byte_end":6912,"line_start":174,"line_end":174,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":478},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6914,"byte_end":6919,"line_start":174,"line_end":174,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6983,"byte_end":7001,"line_start":177,"line_end":177,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7003,"byte_end":7024,"line_start":177,"line_end":177,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":896},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7132,"byte_end":7149,"line_start":184,"line_end":184,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":894},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7151,"byte_end":7160,"line_start":184,"line_end":184,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7162,"byte_end":7165,"line_start":184,"line_end":184,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":357},{"krate":0,"index":400},{"krate":0,"index":437},{"krate":0,"index":456},{"krate":0,"index":508},{"krate":0,"index":653},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":874},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10650337,"byte_end":10650355,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10650166,"byte_end":10650225,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10650269,"byte_end":10650327,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10650473,"byte_end":10650493,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10650401,"byte_end":10650461,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10650623,"byte_end":10650630,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10650542,"byte_end":10650614,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10650716,"byte_end":10650719,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10650652,"byte_end":10650707,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651830,"byte_end":10651851,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651034,"byte_end":10651086,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651087,"byte_end":10651090,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651091,"byte_end":10651182,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651183,"byte_end":10651275,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651276,"byte_end":10651279,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651280,"byte_end":10651345,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651346,"byte_end":10651349,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651350,"byte_end":10651444,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651445,"byte_end":10651471,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651472,"byte_end":10651564,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651565,"byte_end":10651593,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n             \"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651637,"byte_end":10651819,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651917,"byte_end":10651924,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651858,"byte_end":10651909,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10652142,"byte_end":10652149,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10651950,"byte_end":10651998,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10652003,"byte_end":10652006,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10652011,"byte_end":10652104,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10652109,"byte_end":10652134,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654499,"byte_end":10654508,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10653526,"byte_end":10653573,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10653574,"byte_end":10653577,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10653578,"byte_end":10653676,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10653677,"byte_end":10653772,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10653773,"byte_end":10653835,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10653836,"byte_end":10653839,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10653840,"byte_end":10653932,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10653933,"byte_end":10654032,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654033,"byte_end":10654133,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654134,"byte_end":10654156,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654157,"byte_end":10654160,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654161,"byte_end":10654254,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654255,"byte_end":10654326,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654327,"byte_end":10654330,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654331,"byte_end":10654338,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654339,"byte_end":10654369,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654370,"byte_end":10654401,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654402,"byte_end":10654405,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654406,"byte_end":10654480,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654481,"byte_end":10654488,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":131},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654555,"byte_end":10654560,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654515,"byte_end":10654544,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654614,"byte_end":10654618,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654574,"byte_end":10654604,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654770,"byte_end":10654774,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654625,"byte_end":10654670,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654675,"byte_end":10654678,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654683,"byte_end":10654695,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654700,"byte_end":10654703,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654708,"byte_end":10654755,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655138,"byte_end":10655143,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654808,"byte_end":10654843,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654848,"byte_end":10654851,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654856,"byte_end":10654868,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654873,"byte_end":10654876,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654881,"byte_end":10654957,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10654962,"byte_end":10655030,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655035,"byte_end":10655123,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655542,"byte_end":10655551,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655178,"byte_end":10655221,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655226,"byte_end":10655229,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655234,"byte_end":10655246,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655251,"byte_end":10655254,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655259,"byte_end":10655335,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655340,"byte_end":10655408,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655413,"byte_end":10655503,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655508,"byte_end":10655527,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655964,"byte_end":10655968,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655590,"byte_end":10655643,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655648,"byte_end":10655651,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655656,"byte_end":10655668,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655673,"byte_end":10655676,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655681,"byte_end":10655757,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655762,"byte_end":10655830,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655835,"byte_end":10655925,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10655930,"byte_end":10655949,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659077,"byte_end":10659083,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10658559,"byte_end":10658623,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10658624,"byte_end":10658627,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10658628,"byte_end":10658726,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10658727,"byte_end":10658824,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10658825,"byte_end":10658896,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10658897,"byte_end":10658900,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10658901,"byte_end":10658981,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10658982,"byte_end":10658985,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10658986,"byte_end":10659065,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659569,"byte_end":10659572,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659336,"byte_end":10659418,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659423,"byte_end":10659426,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659431,"byte_end":10659445,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659450,"byte_end":10659453,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659458,"byte_end":10659465,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659470,"byte_end":10659502,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659507,"byte_end":10659510,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659515,"byte_end":10659545,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659550,"byte_end":10659557,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659916,"byte_end":10659920,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659675,"byte_end":10659757,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659762,"byte_end":10659765,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659770,"byte_end":10659784,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659789,"byte_end":10659792,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659797,"byte_end":10659804,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659809,"byte_end":10659841,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659846,"byte_end":10659849,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659854,"byte_end":10659892,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659897,"byte_end":10659904,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660509,"byte_end":10660513,"line_start":347,"line_end":347,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660225,"byte_end":10660263,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660268,"byte_end":10660271,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660276,"byte_end":10660290,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660295,"byte_end":10660298,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660303,"byte_end":10660310,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660315,"byte_end":10660347,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660352,"byte_end":10660355,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660360,"byte_end":10660394,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660399,"byte_end":10660406,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660411,"byte_end":10660414,"line_start":345,"line_end":345,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661098,"byte_end":10661102,"line_start":369,"line_end":369,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660640,"byte_end":10660685,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660690,"byte_end":10660693,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660698,"byte_end":10660788,"line_start":356,"line_end":356,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660793,"byte_end":10660807,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660812,"byte_end":10660815,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660820,"byte_end":10660834,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660839,"byte_end":10660842,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660847,"byte_end":10660854,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660859,"byte_end":10660908,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660913,"byte_end":10660957,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660962,"byte_end":10660965,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10660970,"byte_end":10661000,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661005,"byte_end":10661035,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661040,"byte_end":10661074,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661079,"byte_end":10661086,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662109,"byte_end":10662121,"line_start":394,"line_end":394,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661232,"byte_end":10661311,"line_start":373,"line_end":373,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661316,"byte_end":10661319,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661324,"byte_end":10661397,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661402,"byte_end":10661478,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661483,"byte_end":10661554,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661559,"byte_end":10661633,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661638,"byte_end":10661661,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661666,"byte_end":10661669,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661674,"byte_end":10661749,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661754,"byte_end":10661828,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661833,"byte_end":10661867,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661872,"byte_end":10661875,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661880,"byte_end":10661894,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661899,"byte_end":10661902,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661907,"byte_end":10661914,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661919,"byte_end":10661968,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661973,"byte_end":10661976,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10661981,"byte_end":10662011,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662016,"byte_end":10662046,"line_start":391,"line_end":391,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662051,"byte_end":10662085,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662090,"byte_end":10662097,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662729,"byte_end":10662734,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662241,"byte_end":10662306,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662311,"byte_end":10662314,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662319,"byte_end":10662409,"line_start":400,"line_end":400,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662414,"byte_end":10662428,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662433,"byte_end":10662436,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662441,"byte_end":10662455,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662460,"byte_end":10662463,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662468,"byte_end":10662475,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662480,"byte_end":10662529,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662534,"byte_end":10662578,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662583,"byte_end":10662586,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662591,"byte_end":10662621,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662626,"byte_end":10662662,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662667,"byte_end":10662705,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662710,"byte_end":10662717,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663384,"byte_end":10663388,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662841,"byte_end":10662929,"line_start":417,"line_end":417,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662934,"byte_end":10662947,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662952,"byte_end":10662955,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10662960,"byte_end":10663050,"line_start":420,"line_end":420,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663055,"byte_end":10663069,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663074,"byte_end":10663077,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663082,"byte_end":10663096,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663101,"byte_end":10663104,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663109,"byte_end":10663116,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663121,"byte_end":10663178,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663183,"byte_end":10663227,"line_start":427,"line_end":427,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663232,"byte_end":10663235,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663240,"byte_end":10663270,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663275,"byte_end":10663305,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663310,"byte_end":10663360,"line_start":431,"line_end":431,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663365,"byte_end":10663372,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10665224,"byte_end":10665240,"line_start":467,"line_end":467,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\n                        P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                           &'g Guard) -> Result<Shared, CompareExchangeError>\nwhere P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663559,"byte_end":10663655,"line_start":437,"line_end":437,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663660,"byte_end":10663754,"line_start":438,"line_end":438,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663759,"byte_end":10663830,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663835,"byte_end":10663838,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663843,"byte_end":10663938,"line_start":441,"line_end":441,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10663943,"byte_end":10664034,"line_start":442,"line_end":442,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664039,"byte_end":10664052,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664057,"byte_end":10664060,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664065,"byte_end":10664134,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664139,"byte_end":10664220,"line_start":446,"line_end":446,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664225,"byte_end":10664316,"line_start":447,"line_end":447,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664321,"byte_end":10664411,"line_start":448,"line_end":448,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664416,"byte_end":10664498,"line_start":449,"line_end":449,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664503,"byte_end":10664581,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664586,"byte_end":10664666,"line_start":451,"line_end":451,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664671,"byte_end":10664737,"line_start":452,"line_end":452,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664742,"byte_end":10664745,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664750,"byte_end":10664764,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664769,"byte_end":10664772,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664777,"byte_end":10664784,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664789,"byte_end":10664853,"line_start":457,"line_end":457,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664858,"byte_end":10664902,"line_start":458,"line_end":458,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664907,"byte_end":10664910,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664915,"byte_end":10664945,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664950,"byte_end":10664953,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664958,"byte_end":10664988,"line_start":462,"line_end":462,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10664993,"byte_end":10665030,"line_start":463,"line_end":463,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10665035,"byte_end":10665114,"line_start":464,"line_end":464,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10665119,"byte_end":10665200,"line_start":465,"line_end":465,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10665205,"byte_end":10665212,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10668274,"byte_end":10668295,"line_start":542,"line_end":542,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\n                             P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                                &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10665902,"byte_end":10665998,"line_start":490,"line_end":490,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666003,"byte_end":10666097,"line_start":491,"line_end":491,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666102,"byte_end":10666173,"line_start":492,"line_end":492,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666178,"byte_end":10666181,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666186,"byte_end":10666281,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666286,"byte_end":10666381,"line_start":495,"line_end":495,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666386,"byte_end":10666476,"line_start":496,"line_end":496,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666481,"byte_end":10666565,"line_start":497,"line_end":497,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666570,"byte_end":10666573,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666578,"byte_end":10666647,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666652,"byte_end":10666733,"line_start":500,"line_end":500,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666738,"byte_end":10666829,"line_start":501,"line_end":501,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666834,"byte_end":10666924,"line_start":502,"line_end":502,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10666929,"byte_end":10667011,"line_start":503,"line_end":503,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667016,"byte_end":10667094,"line_start":504,"line_end":504,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667099,"byte_end":10667179,"line_start":505,"line_end":505,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667184,"byte_end":10667250,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667255,"byte_end":10667258,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667263,"byte_end":10667313,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667318,"byte_end":10667321,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667326,"byte_end":10667340,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667345,"byte_end":10667348,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667353,"byte_end":10667360,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667365,"byte_end":10667429,"line_start":513,"line_end":513,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667434,"byte_end":10667478,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667483,"byte_end":10667486,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667491,"byte_end":10667521,"line_start":516,"line_end":516,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667526,"byte_end":10667556,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667561,"byte_end":10667564,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667569,"byte_end":10667604,"line_start":519,"line_end":519,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667609,"byte_end":10667649,"line_start":520,"line_end":520,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667654,"byte_end":10667664,"line_start":521,"line_end":521,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667669,"byte_end":10667741,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667746,"byte_end":10667768,"line_start":523,"line_end":523,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667773,"byte_end":10667797,"line_start":524,"line_end":524,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667802,"byte_end":10667824,"line_start":525,"line_end":525,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667829,"byte_end":10667842,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667847,"byte_end":10667872,"line_start":527,"line_end":527,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667877,"byte_end":10667911,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667916,"byte_end":10667946,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667951,"byte_end":10667964,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667969,"byte_end":10667978,"line_start":531,"line_end":531,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667983,"byte_end":10667988,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10667993,"byte_end":10667996,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10668001,"byte_end":10668042,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10668047,"byte_end":10668057,"line_start":535,"line_end":535,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10668062,"byte_end":10668146,"line_start":536,"line_end":536,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10668151,"byte_end":10668178,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10668183,"byte_end":10668226,"line_start":538,"line_end":538,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10668231,"byte_end":10668240,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10668245,"byte_end":10668250,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10668255,"byte_end":10668262,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670792,"byte_end":10670804,"line_start":604,"line_end":604,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"pub fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10668962,"byte_end":10669046,"line_start":565,"line_end":565,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669051,"byte_end":10669145,"line_start":566,"line_end":566,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669150,"byte_end":10669153,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669158,"byte_end":10669252,"line_start":568,"line_end":568,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669257,"byte_end":10669351,"line_start":569,"line_end":569,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669356,"byte_end":10669413,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669418,"byte_end":10669421,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669426,"byte_end":10669500,"line_start":572,"line_end":572,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669505,"byte_end":10669582,"line_start":573,"line_end":573,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669587,"byte_end":10669657,"line_start":574,"line_end":574,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669662,"byte_end":10669738,"line_start":575,"line_end":575,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669743,"byte_end":10669802,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669807,"byte_end":10669810,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669815,"byte_end":10669885,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669890,"byte_end":10669965,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10669970,"byte_end":10670042,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670047,"byte_end":10670122,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670127,"byte_end":10670148,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670153,"byte_end":10670156,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670161,"byte_end":10670195,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670200,"byte_end":10670234,"line_start":585,"line_end":585,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670239,"byte_end":10670273,"line_start":586,"line_end":586,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670278,"byte_end":10670310,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670315,"byte_end":10670318,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670323,"byte_end":10670337,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670342,"byte_end":10670345,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670350,"byte_end":10670357,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670362,"byte_end":10670411,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670416,"byte_end":10670460,"line_start":593,"line_end":593,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670465,"byte_end":10670468,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670473,"byte_end":10670503,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670508,"byte_end":10670538,"line_start":596,"line_end":596,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670543,"byte_end":10670546,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670551,"byte_end":10670629,"line_start":598,"line_end":598,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670634,"byte_end":10670660,"line_start":599,"line_end":599,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670665,"byte_end":10670668,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670673,"byte_end":10670736,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670741,"byte_end":10670768,"line_start":602,"line_end":602,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10670773,"byte_end":10670780,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10673104,"byte_end":10673119,"line_start":665,"line_end":665,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10671402,"byte_end":10671498,"line_start":624,"line_end":624,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10671503,"byte_end":10671597,"line_start":625,"line_end":625,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10671602,"byte_end":10671673,"line_start":626,"line_end":626,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10671678,"byte_end":10671681,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10671686,"byte_end":10671781,"line_start":628,"line_end":628,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10671786,"byte_end":10671877,"line_start":629,"line_end":629,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10671882,"byte_end":10671895,"line_start":630,"line_end":630,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10671900,"byte_end":10671903,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10671908,"byte_end":10671993,"line_start":632,"line_end":632,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10671998,"byte_end":10672029,"line_start":633,"line_end":633,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672034,"byte_end":10672037,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672042,"byte_end":10672079,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672084,"byte_end":10672087,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672092,"byte_end":10672180,"line_start":637,"line_end":637,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672185,"byte_end":10672206,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672211,"byte_end":10672214,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672219,"byte_end":10672251,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672256,"byte_end":10672288,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672293,"byte_end":10672325,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672330,"byte_end":10672362,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672367,"byte_end":10672399,"line_start":644,"line_end":644,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672404,"byte_end":10672436,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672441,"byte_end":10672472,"line_start":646,"line_end":646,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672477,"byte_end":10672480,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672485,"byte_end":10672499,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672504,"byte_end":10672507,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672512,"byte_end":10672519,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672524,"byte_end":10672551,"line_start":651,"line_end":651,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672556,"byte_end":10672620,"line_start":652,"line_end":652,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672625,"byte_end":10672669,"line_start":653,"line_end":653,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672674,"byte_end":10672677,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672682,"byte_end":10672712,"line_start":655,"line_end":655,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672717,"byte_end":10672720,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672725,"byte_end":10672755,"line_start":657,"line_end":657,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672760,"byte_end":10672797,"line_start":658,"line_end":658,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672802,"byte_end":10672872,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672877,"byte_end":10672949,"line_start":660,"line_end":660,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10672954,"byte_end":10672961,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10673013,"byte_end":10673033,"line_start":663,"line_end":663,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10673038,"byte_end":10673092,"line_start":664,"line_end":664,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675888,"byte_end":10675908,"line_start":742,"line_end":742,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10673462,"byte_end":10673558,"line_start":679,"line_end":679,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10673563,"byte_end":10673657,"line_start":680,"line_end":680,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10673662,"byte_end":10673733,"line_start":681,"line_end":681,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10673738,"byte_end":10673741,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10673746,"byte_end":10673840,"line_start":683,"line_end":683,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10673845,"byte_end":10673940,"line_start":684,"line_end":684,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10673945,"byte_end":10674035,"line_start":685,"line_end":685,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674040,"byte_end":10674124,"line_start":686,"line_end":686,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674129,"byte_end":10674132,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674137,"byte_end":10674222,"line_start":688,"line_end":688,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674227,"byte_end":10674258,"line_start":689,"line_end":689,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674263,"byte_end":10674266,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674271,"byte_end":10674319,"line_start":691,"line_end":691,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674324,"byte_end":10674327,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674332,"byte_end":10674374,"line_start":693,"line_end":693,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674379,"byte_end":10674382,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674387,"byte_end":10674485,"line_start":695,"line_end":695,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674490,"byte_end":10674511,"line_start":696,"line_end":696,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674516,"byte_end":10674519,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674524,"byte_end":10674556,"line_start":698,"line_end":698,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674561,"byte_end":10674593,"line_start":699,"line_end":699,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674598,"byte_end":10674630,"line_start":700,"line_end":700,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674635,"byte_end":10674667,"line_start":701,"line_end":701,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674672,"byte_end":10674704,"line_start":702,"line_end":702,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674709,"byte_end":10674741,"line_start":703,"line_end":703,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674746,"byte_end":10674777,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674782,"byte_end":10674785,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674790,"byte_end":10674804,"line_start":706,"line_end":706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674809,"byte_end":10674812,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674817,"byte_end":10674824,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674829,"byte_end":10674856,"line_start":709,"line_end":709,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674861,"byte_end":10674925,"line_start":710,"line_end":710,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674930,"byte_end":10674974,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674979,"byte_end":10674982,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10674987,"byte_end":10675017,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675022,"byte_end":10675052,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675057,"byte_end":10675060,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675065,"byte_end":10675100,"line_start":716,"line_end":716,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675105,"byte_end":10675145,"line_start":717,"line_end":717,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675150,"byte_end":10675160,"line_start":718,"line_end":718,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675165,"byte_end":10675228,"line_start":719,"line_end":719,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675233,"byte_end":10675255,"line_start":720,"line_end":720,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675260,"byte_end":10675284,"line_start":721,"line_end":721,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675289,"byte_end":10675311,"line_start":722,"line_end":722,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675316,"byte_end":10675329,"line_start":723,"line_end":723,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675334,"byte_end":10675359,"line_start":724,"line_end":724,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675364,"byte_end":10675398,"line_start":725,"line_end":725,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675403,"byte_end":10675433,"line_start":726,"line_end":726,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675438,"byte_end":10675451,"line_start":727,"line_end":727,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675456,"byte_end":10675465,"line_start":728,"line_end":728,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675470,"byte_end":10675475,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675480,"byte_end":10675483,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675488,"byte_end":10675529,"line_start":731,"line_end":731,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675534,"byte_end":10675544,"line_start":732,"line_end":732,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675549,"byte_end":10675624,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675629,"byte_end":10675656,"line_start":734,"line_end":734,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675661,"byte_end":10675704,"line_start":735,"line_end":735,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675709,"byte_end":10675718,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675723,"byte_end":10675728,"line_start":737,"line_end":737,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675733,"byte_end":10675740,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675792,"byte_end":10675812,"line_start":740,"line_end":740,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10675817,"byte_end":10675876,"line_start":741,"line_end":741,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676987,"byte_end":10676996,"line_start":775,"line_end":775,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676256,"byte_end":10676295,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676300,"byte_end":10676303,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676308,"byte_end":10676402,"line_start":758,"line_end":758,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676407,"byte_end":10676463,"line_start":759,"line_end":759,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676468,"byte_end":10676471,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676476,"byte_end":10676566,"line_start":761,"line_end":761,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676571,"byte_end":10676585,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676590,"byte_end":10676593,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676598,"byte_end":10676612,"line_start":764,"line_end":764,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676617,"byte_end":10676620,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676625,"byte_end":10676632,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676637,"byte_end":10676694,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676699,"byte_end":10676743,"line_start":768,"line_end":768,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676748,"byte_end":10676751,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676756,"byte_end":10676816,"line_start":770,"line_end":770,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676821,"byte_end":10676851,"line_start":771,"line_end":771,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676856,"byte_end":10676911,"line_start":772,"line_end":772,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676916,"byte_end":10676963,"line_start":773,"line_end":773,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10676968,"byte_end":10676975,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677895,"byte_end":10677903,"line_start":798,"line_end":798,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677167,"byte_end":10677205,"line_start":779,"line_end":779,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677210,"byte_end":10677213,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677218,"byte_end":10677311,"line_start":781,"line_end":781,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677316,"byte_end":10677372,"line_start":782,"line_end":782,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677377,"byte_end":10677380,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677385,"byte_end":10677475,"line_start":784,"line_end":784,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677480,"byte_end":10677494,"line_start":785,"line_end":785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677499,"byte_end":10677502,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677507,"byte_end":10677521,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677526,"byte_end":10677529,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677534,"byte_end":10677541,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677546,"byte_end":10677603,"line_start":790,"line_end":790,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677608,"byte_end":10677652,"line_start":791,"line_end":791,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677657,"byte_end":10677660,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677665,"byte_end":10677725,"line_start":793,"line_end":793,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677730,"byte_end":10677760,"line_start":794,"line_end":794,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677765,"byte_end":10677819,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677824,"byte_end":10677871,"line_start":796,"line_end":796,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10677876,"byte_end":10677883,"line_start":797,"line_end":797,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678803,"byte_end":10678812,"line_start":821,"line_end":821,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678072,"byte_end":10678111,"line_start":802,"line_end":802,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678116,"byte_end":10678119,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678124,"byte_end":10678218,"line_start":804,"line_end":804,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678223,"byte_end":10678279,"line_start":805,"line_end":805,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678284,"byte_end":10678287,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678292,"byte_end":10678382,"line_start":807,"line_end":807,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678387,"byte_end":10678401,"line_start":808,"line_end":808,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678406,"byte_end":10678409,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678414,"byte_end":10678428,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678433,"byte_end":10678436,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678441,"byte_end":10678448,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678453,"byte_end":10678510,"line_start":813,"line_end":813,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678515,"byte_end":10678559,"line_start":814,"line_end":814,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678564,"byte_end":10678567,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678572,"byte_end":10678632,"line_start":816,"line_end":816,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678637,"byte_end":10678667,"line_start":817,"line_end":817,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678672,"byte_end":10678727,"line_start":818,"line_end":818,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678732,"byte_end":10678779,"line_start":819,"line_end":819,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678784,"byte_end":10678791,"line_start":820,"line_end":820,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10680109,"byte_end":10680119,"line_start":859,"line_end":859,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10678982,"byte_end":10679017,"line_start":825,"line_end":825,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679022,"byte_end":10679025,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679030,"byte_end":10679119,"line_start":827,"line_end":827,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679124,"byte_end":10679210,"line_start":828,"line_end":828,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679215,"byte_end":10679250,"line_start":829,"line_end":829,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679255,"byte_end":10679258,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679263,"byte_end":10679275,"line_start":831,"line_end":831,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679280,"byte_end":10679283,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679288,"byte_end":10679347,"line_start":833,"line_end":833,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679352,"byte_end":10679355,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679360,"byte_end":10679372,"line_start":835,"line_end":835,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679377,"byte_end":10679380,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679385,"byte_end":10679472,"line_start":837,"line_end":837,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679477,"byte_end":10679510,"line_start":838,"line_end":838,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679515,"byte_end":10679518,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679523,"byte_end":10679537,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679542,"byte_end":10679545,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679550,"byte_end":10679561,"line_start":842,"line_end":842,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679566,"byte_end":10679585,"line_start":843,"line_end":843,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679590,"byte_end":10679624,"line_start":844,"line_end":844,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679629,"byte_end":10679655,"line_start":845,"line_end":845,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679660,"byte_end":10679687,"line_start":846,"line_end":846,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679692,"byte_end":10679697,"line_start":847,"line_end":847,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679702,"byte_end":10679705,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679710,"byte_end":10679743,"line_start":849,"line_end":849,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679748,"byte_end":10679776,"line_start":850,"line_end":850,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679781,"byte_end":10679875,"line_start":851,"line_end":851,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679880,"byte_end":10679927,"line_start":852,"line_end":852,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679932,"byte_end":10679952,"line_start":853,"line_end":853,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10679957,"byte_end":10680036,"line_start":854,"line_end":854,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10680041,"byte_end":10680054,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10680059,"byte_end":10680068,"line_start":856,"line_end":856,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10680073,"byte_end":10680078,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10680083,"byte_end":10680090,"line_start":858,"line_end":858,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683136,"byte_end":10683143,"line_start":972,"line_end":972,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683073,"byte_end":10683125,"line_start":971,"line_end":971,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683235,"byte_end":10683245,"line_start":974,"line_end":974,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683173,"byte_end":10683227,"line_start":973,"line_end":973,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683552,"byte_end":10683562,"line_start":982,"line_end":982,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683267,"byte_end":10683331,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683336,"byte_end":10683339,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683344,"byte_end":10683356,"line_start":978,"line_end":978,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683361,"byte_end":10683364,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683369,"byte_end":10683464,"line_start":980,"line_end":980,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683469,"byte_end":10683537,"line_start":981,"line_end":981,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683828,"byte_end":10683833,"line_start":991,"line_end":991,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683588,"byte_end":10683623,"line_start":985,"line_end":985,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683624,"byte_end":10683627,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683628,"byte_end":10683670,"line_start":987,"line_end":987,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683671,"byte_end":10683674,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683675,"byte_end":10683773,"line_start":989,"line_end":989,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683774,"byte_end":10683816,"line_start":990,"line_end":990,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685231,"byte_end":10685239,"line_start":1042,"line_end":1042,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684483,"byte_end":10684533,"line_start":1020,"line_end":1020,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684538,"byte_end":10684541,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684546,"byte_end":10684638,"line_start":1022,"line_end":1022,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684643,"byte_end":10684736,"line_start":1023,"line_end":1023,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684741,"byte_end":10684766,"line_start":1024,"line_end":1024,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684771,"byte_end":10684774,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684779,"byte_end":10684791,"line_start":1026,"line_end":1026,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684796,"byte_end":10684799,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684804,"byte_end":10684848,"line_start":1028,"line_end":1028,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684853,"byte_end":10684856,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684861,"byte_end":10684873,"line_start":1030,"line_end":1030,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684878,"byte_end":10684881,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684886,"byte_end":10684982,"line_start":1032,"line_end":1032,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684987,"byte_end":10685034,"line_start":1033,"line_end":1033,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685039,"byte_end":10685042,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685047,"byte_end":10685061,"line_start":1035,"line_end":1035,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685066,"byte_end":10685069,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685074,"byte_end":10685081,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685086,"byte_end":10685117,"line_start":1038,"line_end":1038,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685122,"byte_end":10685125,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685130,"byte_end":10685200,"line_start":1040,"line_end":1040,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685205,"byte_end":10685212,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685637,"byte_end":10685645,"line_start":1059,"line_end":1059,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685374,"byte_end":10685418,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685423,"byte_end":10685426,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685431,"byte_end":10685445,"line_start":1050,"line_end":1050,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685450,"byte_end":10685453,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685458,"byte_end":10685465,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685470,"byte_end":10685501,"line_start":1053,"line_end":1053,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685506,"byte_end":10685509,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685514,"byte_end":10685543,"line_start":1055,"line_end":1055,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685548,"byte_end":10685583,"line_start":1056,"line_end":1056,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685588,"byte_end":10685613,"line_start":1057,"line_end":1057,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685618,"byte_end":10685625,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686034,"byte_end":10686037,"line_start":1074,"line_end":1074,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685804,"byte_end":10685885,"line_start":1065,"line_end":1065,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685890,"byte_end":10685893,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685898,"byte_end":10685912,"line_start":1067,"line_end":1067,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685917,"byte_end":10685920,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685925,"byte_end":10685932,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685937,"byte_end":10685968,"line_start":1070,"line_end":1070,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685973,"byte_end":10685976,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10685981,"byte_end":10686010,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686015,"byte_end":10686022,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686376,"byte_end":10686380,"line_start":1089,"line_end":1089,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686138,"byte_end":10686219,"line_start":1080,"line_end":1080,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686224,"byte_end":10686227,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686232,"byte_end":10686246,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686251,"byte_end":10686254,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686259,"byte_end":10686266,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686271,"byte_end":10686302,"line_start":1085,"line_end":1085,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686307,"byte_end":10686310,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686315,"byte_end":10686352,"line_start":1087,"line_end":1087,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686357,"byte_end":10686364,"line_start":1088,"line_end":1088,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686801,"byte_end":10686812,"line_start":1105,"line_end":1105,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686472,"byte_end":10686521,"line_start":1093,"line_end":1093,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686526,"byte_end":10686529,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686534,"byte_end":10686548,"line_start":1095,"line_end":1095,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686553,"byte_end":10686556,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686561,"byte_end":10686568,"line_start":1097,"line_end":1097,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686573,"byte_end":10686621,"line_start":1098,"line_end":1098,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686626,"byte_end":10686629,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686634,"byte_end":10686663,"line_start":1100,"line_end":1100,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686668,"byte_end":10686698,"line_start":1101,"line_end":1101,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686703,"byte_end":10686736,"line_start":1102,"line_end":1102,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686741,"byte_end":10686748,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686753,"byte_end":10686789,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687132,"byte_end":10687135,"line_start":1118,"line_end":1118,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686924,"byte_end":10686970,"line_start":1109,"line_end":1109,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686975,"byte_end":10686978,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686983,"byte_end":10686997,"line_start":1111,"line_end":1111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687002,"byte_end":10687005,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687010,"byte_end":10687017,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687022,"byte_end":10687053,"line_start":1114,"line_end":1114,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687058,"byte_end":10687061,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687066,"byte_end":10687108,"line_start":1116,"line_end":1116,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687113,"byte_end":10687120,"line_start":1117,"line_end":1117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687608,"byte_end":10687616,"line_start":1136,"line_end":1136,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687231,"byte_end":10687321,"line_start":1123,"line_end":1123,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687326,"byte_end":10687364,"line_start":1124,"line_end":1124,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687369,"byte_end":10687372,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687377,"byte_end":10687391,"line_start":1126,"line_end":1126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687396,"byte_end":10687399,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687404,"byte_end":10687411,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687416,"byte_end":10687447,"line_start":1129,"line_end":1129,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687452,"byte_end":10687455,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687460,"byte_end":10687489,"line_start":1131,"line_end":1131,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687494,"byte_end":10687521,"line_start":1132,"line_end":1132,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687526,"byte_end":10687552,"line_start":1133,"line_end":1133,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687557,"byte_end":10687584,"line_start":1134,"line_end":1134,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687589,"byte_end":10687596,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":303},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690078,"byte_end":10690084,"line_start":1239,"line_end":1239,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689799,"byte_end":10689852,"line_start":1233,"line_end":1233,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689853,"byte_end":10689856,"line_start":1234,"line_end":1234,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689857,"byte_end":10689920,"line_start":1235,"line_end":1235,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689921,"byte_end":10689924,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689925,"byte_end":10690023,"line_start":1237,"line_end":1237,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690024,"byte_end":10690066,"line_start":1238,"line_end":1238,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691206,"byte_end":10691212,"line_start":1287,"line_end":1287,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690736,"byte_end":10690796,"line_start":1271,"line_end":1271,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690801,"byte_end":10690804,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690809,"byte_end":10690823,"line_start":1273,"line_end":1273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690828,"byte_end":10690831,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690836,"byte_end":10690843,"line_start":1275,"line_end":1275,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690848,"byte_end":10690904,"line_start":1276,"line_end":1276,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690909,"byte_end":10690953,"line_start":1277,"line_end":1277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690958,"byte_end":10690961,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690966,"byte_end":10690995,"line_start":1279,"line_end":1279,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691000,"byte_end":10691030,"line_start":1280,"line_end":1280,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691035,"byte_end":10691063,"line_start":1281,"line_end":1281,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691068,"byte_end":10691071,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691076,"byte_end":10691106,"line_start":1283,"line_end":1283,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691111,"byte_end":10691145,"line_start":1284,"line_end":1284,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691150,"byte_end":10691182,"line_start":1285,"line_end":1285,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691187,"byte_end":10691194,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691589,"byte_end":10691593,"line_start":1304,"line_end":1304,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691373,"byte_end":10691404,"line_start":1294,"line_end":1294,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691409,"byte_end":10691412,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691417,"byte_end":10691431,"line_start":1296,"line_end":1296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691436,"byte_end":10691439,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691444,"byte_end":10691451,"line_start":1298,"line_end":1298,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691456,"byte_end":10691488,"line_start":1299,"line_end":1299,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691493,"byte_end":10691496,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691501,"byte_end":10691535,"line_start":1301,"line_end":1301,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691540,"byte_end":10691565,"line_start":1302,"line_end":1302,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691570,"byte_end":10691577,"line_start":1303,"line_end":1303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692150,"byte_end":10692157,"line_start":1325,"line_end":1325,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691708,"byte_end":10691750,"line_start":1311,"line_end":1311,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691755,"byte_end":10691758,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691763,"byte_end":10691777,"line_start":1313,"line_end":1313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691782,"byte_end":10691785,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691790,"byte_end":10691797,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691802,"byte_end":10691858,"line_start":1316,"line_end":1316,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691863,"byte_end":10691907,"line_start":1317,"line_end":1317,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691912,"byte_end":10691915,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691920,"byte_end":10691947,"line_start":1319,"line_end":1319,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691952,"byte_end":10691982,"line_start":1320,"line_end":1320,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691987,"byte_end":10692032,"line_start":1321,"line_end":1321,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692037,"byte_end":10692075,"line_start":1322,"line_end":1322,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692080,"byte_end":10692126,"line_start":1323,"line_end":1323,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692131,"byte_end":10692138,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693437,"byte_end":10693442,"line_start":1361,"line_end":1361,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692257,"byte_end":10692286,"line_start":1330,"line_end":1330,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692291,"byte_end":10692294,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692299,"byte_end":10692377,"line_start":1332,"line_end":1332,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692382,"byte_end":10692385,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692390,"byte_end":10692402,"line_start":1334,"line_end":1334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692407,"byte_end":10692410,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692415,"byte_end":10692500,"line_start":1336,"line_end":1336,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692505,"byte_end":10692508,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692513,"byte_end":10692604,"line_start":1338,"line_end":1338,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692609,"byte_end":10692658,"line_start":1339,"line_end":1339,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692663,"byte_end":10692666,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692671,"byte_end":10692743,"line_start":1341,"line_end":1341,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692748,"byte_end":10692823,"line_start":1342,"line_end":1342,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692828,"byte_end":10692831,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692836,"byte_end":10692929,"line_start":1344,"line_end":1344,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10692934,"byte_end":10693027,"line_start":1345,"line_end":1345,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693032,"byte_end":10693070,"line_start":1346,"line_end":1346,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693075,"byte_end":10693078,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693083,"byte_end":10693097,"line_start":1348,"line_end":1348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693102,"byte_end":10693105,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693110,"byte_end":10693117,"line_start":1350,"line_end":1350,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693122,"byte_end":10693171,"line_start":1351,"line_end":1351,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693176,"byte_end":10693220,"line_start":1352,"line_end":1352,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693225,"byte_end":10693228,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693233,"byte_end":10693263,"line_start":1354,"line_end":1354,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693268,"byte_end":10693298,"line_start":1355,"line_end":1355,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693303,"byte_end":10693337,"line_start":1356,"line_end":1356,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693342,"byte_end":10693354,"line_start":1357,"line_end":1357,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693359,"byte_end":10693396,"line_start":1358,"line_end":1358,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693401,"byte_end":10693406,"line_start":1359,"line_end":1359,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693411,"byte_end":10693418,"line_start":1360,"line_end":1360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694708,"byte_end":10694717,"line_start":1402,"line_end":1402,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693548,"byte_end":10693577,"line_start":1366,"line_end":1366,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693582,"byte_end":10693585,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693590,"byte_end":10693676,"line_start":1368,"line_end":1368,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693681,"byte_end":10693684,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693689,"byte_end":10693701,"line_start":1370,"line_end":1370,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693706,"byte_end":10693709,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693714,"byte_end":10693809,"line_start":1372,"line_end":1372,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693814,"byte_end":10693851,"line_start":1373,"line_end":1373,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693856,"byte_end":10693859,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693864,"byte_end":10693953,"line_start":1375,"line_end":1375,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693958,"byte_end":10693961,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10693966,"byte_end":10694040,"line_start":1377,"line_end":1377,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694045,"byte_end":10694048,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694053,"byte_end":10694067,"line_start":1379,"line_end":1379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694072,"byte_end":10694075,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694080,"byte_end":10694087,"line_start":1381,"line_end":1381,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694092,"byte_end":10694141,"line_start":1382,"line_end":1382,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694146,"byte_end":10694190,"line_start":1383,"line_end":1383,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694195,"byte_end":10694198,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694203,"byte_end":10694245,"line_start":1385,"line_end":1385,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694250,"byte_end":10694280,"line_start":1386,"line_end":1386,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694285,"byte_end":10694288,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694293,"byte_end":10694331,"line_start":1388,"line_end":1388,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694336,"byte_end":10694348,"line_start":1389,"line_end":1389,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694353,"byte_end":10694383,"line_start":1390,"line_end":1390,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694388,"byte_end":10694418,"line_start":1391,"line_end":1391,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694423,"byte_end":10694464,"line_start":1392,"line_end":1392,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694469,"byte_end":10694487,"line_start":1393,"line_end":1393,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694492,"byte_end":10694536,"line_start":1394,"line_end":1394,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694541,"byte_end":10694546,"line_start":1395,"line_end":1395,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694551,"byte_end":10694554,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694559,"byte_end":10694593,"line_start":1397,"line_end":1397,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694598,"byte_end":10694610,"line_start":1398,"line_end":1398,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694615,"byte_end":10694667,"line_start":1399,"line_end":1399,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694672,"byte_end":10694677,"line_start":1400,"line_end":1400,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694682,"byte_end":10694689,"line_start":1401,"line_end":1401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696050,"byte_end":10696056,"line_start":1438,"line_end":1438,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694835,"byte_end":10694875,"line_start":1407,"line_end":1407,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694880,"byte_end":10694883,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694888,"byte_end":10694983,"line_start":1409,"line_end":1409,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694988,"byte_end":10694991,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10694996,"byte_end":10695008,"line_start":1411,"line_end":1411,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695013,"byte_end":10695016,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695021,"byte_end":10695106,"line_start":1413,"line_end":1413,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695111,"byte_end":10695114,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695119,"byte_end":10695210,"line_start":1415,"line_end":1415,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695215,"byte_end":10695264,"line_start":1416,"line_end":1416,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695269,"byte_end":10695272,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695277,"byte_end":10695349,"line_start":1418,"line_end":1418,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695354,"byte_end":10695429,"line_start":1419,"line_end":1419,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695434,"byte_end":10695437,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695442,"byte_end":10695535,"line_start":1421,"line_end":1421,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695540,"byte_end":10695633,"line_start":1422,"line_end":1422,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695638,"byte_end":10695676,"line_start":1423,"line_end":1423,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695681,"byte_end":10695684,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695689,"byte_end":10695703,"line_start":1425,"line_end":1425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695708,"byte_end":10695711,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695716,"byte_end":10695723,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695728,"byte_end":10695777,"line_start":1428,"line_end":1428,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695782,"byte_end":10695826,"line_start":1429,"line_end":1429,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695831,"byte_end":10695834,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695839,"byte_end":10695869,"line_start":1431,"line_end":1431,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695874,"byte_end":10695904,"line_start":1432,"line_end":1432,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695909,"byte_end":10695943,"line_start":1433,"line_end":1433,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695948,"byte_end":10695960,"line_start":1434,"line_end":1434,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10695965,"byte_end":10696009,"line_start":1435,"line_end":1435,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696014,"byte_end":10696019,"line_start":1436,"line_end":1436,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696024,"byte_end":10696031,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696916,"byte_end":10696926,"line_start":1471,"line_end":1471,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696246,"byte_end":10696281,"line_start":1447,"line_end":1447,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696286,"byte_end":10696289,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696294,"byte_end":10696306,"line_start":1449,"line_end":1449,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696311,"byte_end":10696314,"line_start":1450,"line_end":1450,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696319,"byte_end":10696378,"line_start":1451,"line_end":1451,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696383,"byte_end":10696386,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696391,"byte_end":10696403,"line_start":1453,"line_end":1453,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696408,"byte_end":10696411,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696416,"byte_end":10696503,"line_start":1455,"line_end":1455,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696508,"byte_end":10696541,"line_start":1456,"line_end":1456,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696546,"byte_end":10696549,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696554,"byte_end":10696568,"line_start":1458,"line_end":1458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696573,"byte_end":10696576,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696581,"byte_end":10696588,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696593,"byte_end":10696642,"line_start":1461,"line_end":1461,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696647,"byte_end":10696691,"line_start":1462,"line_end":1462,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696696,"byte_end":10696699,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696704,"byte_end":10696734,"line_start":1464,"line_end":1464,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696739,"byte_end":10696751,"line_start":1465,"line_end":1465,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696756,"byte_end":10696798,"line_start":1466,"line_end":1466,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696803,"byte_end":10696841,"line_start":1467,"line_end":1467,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696846,"byte_end":10696875,"line_start":1468,"line_end":1468,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696880,"byte_end":10696885,"line_start":1469,"line_end":1469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10696890,"byte_end":10696897,"line_start":1470,"line_end":1470,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697486,"byte_end":10697489,"line_start":1489,"line_end":1489,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697078,"byte_end":10697124,"line_start":1476,"line_end":1476,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697129,"byte_end":10697132,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697137,"byte_end":10697151,"line_start":1478,"line_end":1478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697156,"byte_end":10697159,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697164,"byte_end":10697171,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697176,"byte_end":10697232,"line_start":1481,"line_end":1481,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697237,"byte_end":10697281,"line_start":1482,"line_end":1482,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697286,"byte_end":10697289,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697294,"byte_end":10697356,"line_start":1484,"line_end":1484,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697361,"byte_end":10697391,"line_start":1485,"line_end":1485,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697396,"byte_end":10697430,"line_start":1486,"line_end":1486,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697435,"byte_end":10697462,"line_start":1487,"line_end":1487,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697467,"byte_end":10697474,"line_start":1488,"line_end":1488,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10698163,"byte_end":10698171,"line_start":1512,"line_end":1512,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697585,"byte_end":10697675,"line_start":1494,"line_end":1494,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697680,"byte_end":10697718,"line_start":1495,"line_end":1495,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697723,"byte_end":10697726,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697731,"byte_end":10697745,"line_start":1497,"line_end":1497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697750,"byte_end":10697753,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697758,"byte_end":10697765,"line_start":1499,"line_end":1499,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697770,"byte_end":10697819,"line_start":1500,"line_end":1500,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697824,"byte_end":10697868,"line_start":1501,"line_end":1501,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697873,"byte_end":10697876,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697881,"byte_end":10697911,"line_start":1503,"line_end":1503,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697916,"byte_end":10697946,"line_start":1504,"line_end":1504,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697951,"byte_end":10697986,"line_start":1505,"line_end":1505,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10697991,"byte_end":10698019,"line_start":1506,"line_end":1506,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10698024,"byte_end":10698027,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10698032,"byte_end":10698060,"line_start":1508,"line_end":1508,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10698065,"byte_end":10698093,"line_start":1509,"line_end":1509,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10698098,"byte_end":10698139,"line_start":1510,"line_end":1510,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10698144,"byte_end":10698151,"line_start":1511,"line_end":1511,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701100,"byte_end":10701109,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":375}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701051,"byte_end":10701088,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701416,"byte_end":10701419,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701376,"byte_end":10701404,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701524,"byte_end":10701532,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701467,"byte_end":10701512,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702200,"byte_end":10702211,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":391}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702152,"byte_end":10702188,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702322,"byte_end":10702325,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702276,"byte_end":10702296,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702301,"byte_end":10702310,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702463,"byte_end":10702472,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702394,"byte_end":10702437,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702442,"byte_end":10702451,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702628,"byte_end":10702637,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702546,"byte_end":10702602,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702607,"byte_end":10702616,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":478},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723289,"byte_end":10723294,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":479}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721573,"byte_end":10721622,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721623,"byte_end":10721626,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721627,"byte_end":10721640,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721641,"byte_end":10721644,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721645,"byte_end":10721724,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721725,"byte_end":10721728,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721729,"byte_end":10721736,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721737,"byte_end":10721770,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721771,"byte_end":10721774,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721775,"byte_end":10721873,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721874,"byte_end":10721966,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721967,"byte_end":10721997,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10721998,"byte_end":10722005,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722006,"byte_end":10722009,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722010,"byte_end":10722086,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722087,"byte_end":10722090,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722091,"byte_end":10722118,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722119,"byte_end":10722122,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722123,"byte_end":10722210,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722211,"byte_end":10722227,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722228,"byte_end":10722231,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722232,"byte_end":10722239,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722240,"byte_end":10722289,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722290,"byte_end":10722334,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722335,"byte_end":10722338,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722339,"byte_end":10722377,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722378,"byte_end":10722407,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722408,"byte_end":10722411,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722412,"byte_end":10722442,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722443,"byte_end":10722473,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722474,"byte_end":10722477,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722478,"byte_end":10722552,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722553,"byte_end":10722587,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722588,"byte_end":10722591,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722592,"byte_end":10722643,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722644,"byte_end":10722690,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722691,"byte_end":10722734,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722735,"byte_end":10722740,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722741,"byte_end":10722748,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722749,"byte_end":10722752,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722753,"byte_end":10722774,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722775,"byte_end":10722778,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722779,"byte_end":10722874,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722875,"byte_end":10722973,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722974,"byte_end":10722993,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722994,"byte_end":10722997,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10722998,"byte_end":10723005,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723006,"byte_end":10723039,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723040,"byte_end":10723043,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723044,"byte_end":10723074,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723075,"byte_end":10723105,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723106,"byte_end":10723138,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723139,"byte_end":10723156,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723157,"byte_end":10723189,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723190,"byte_end":10723207,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723208,"byte_end":10723241,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723242,"byte_end":10723249,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723250,"byte_end":10723253,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723254,"byte_end":10723277,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724269,"byte_end":10724274,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723353,"byte_end":10723442,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723447,"byte_end":10723472,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723477,"byte_end":10723480,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723485,"byte_end":10723578,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723583,"byte_end":10723671,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723676,"byte_end":10723766,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723771,"byte_end":10723811,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723816,"byte_end":10723819,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723824,"byte_end":10723914,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723919,"byte_end":10724010,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724015,"byte_end":10724102,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724107,"byte_end":10724127,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724132,"byte_end":10724135,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724140,"byte_end":10724227,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724232,"byte_end":10724257,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728574,"byte_end":10728589,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724438,"byte_end":10724527,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724532,"byte_end":10724557,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724562,"byte_end":10724565,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724570,"byte_end":10724663,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724668,"byte_end":10724756,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724761,"byte_end":10724851,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724856,"byte_end":10724896,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724901,"byte_end":10724904,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10724909,"byte_end":10724999,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725004,"byte_end":10725095,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725100,"byte_end":10725187,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725192,"byte_end":10725212,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725217,"byte_end":10725220,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725225,"byte_end":10725312,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725317,"byte_end":10725342,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725347,"byte_end":10725350,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725355,"byte_end":10725367,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725372,"byte_end":10725375,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725380,"byte_end":10725472,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725477,"byte_end":10725564,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725569,"byte_end":10725581,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725586,"byte_end":10725589,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725594,"byte_end":10725601,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725606,"byte_end":10725639,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725644,"byte_end":10725647,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725652,"byte_end":10725682,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725687,"byte_end":10725714,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725719,"byte_end":10725731,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725736,"byte_end":10725811,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725816,"byte_end":10725855,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725860,"byte_end":10725896,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725901,"byte_end":10725912,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725917,"byte_end":10725922,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725927,"byte_end":10725934,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725939,"byte_end":10725942,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10725947,"byte_end":10726041,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726046,"byte_end":10726077,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726082,"byte_end":10726085,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726090,"byte_end":10726185,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726190,"byte_end":10726282,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726287,"byte_end":10726376,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726381,"byte_end":10726384,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726389,"byte_end":10726402,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726407,"byte_end":10726460,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726465,"byte_end":10726547,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726552,"byte_end":10726559,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726564,"byte_end":10726567,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726572,"byte_end":10726665,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726670,"byte_end":10726765,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726770,"byte_end":10726830,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726835,"byte_end":10726838,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726843,"byte_end":10726857,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726862,"byte_end":10726865,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726870,"byte_end":10726956,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10726961,"byte_end":10727055,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727060,"byte_end":10727156,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727161,"byte_end":10727253,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727258,"byte_end":10727314,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727319,"byte_end":10727322,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727327,"byte_end":10727334,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727339,"byte_end":10727395,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727400,"byte_end":10727444,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727449,"byte_end":10727452,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727457,"byte_end":10727488,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727493,"byte_end":10727496,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727501,"byte_end":10727578,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727583,"byte_end":10727614,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727619,"byte_end":10727622,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727627,"byte_end":10727657,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727662,"byte_end":10727692,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727697,"byte_end":10727700,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727705,"byte_end":10727782,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727787,"byte_end":10727859,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727864,"byte_end":10727867,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727872,"byte_end":10727893,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727898,"byte_end":10727958,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10727963,"byte_end":10728045,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728050,"byte_end":10728066,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728071,"byte_end":10728150,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728155,"byte_end":10728198,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728203,"byte_end":10728271,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728276,"byte_end":10728368,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728373,"byte_end":10728457,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728462,"byte_end":10728499,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728504,"byte_end":10728519,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728524,"byte_end":10728533,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728538,"byte_end":10728543,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728548,"byte_end":10728555,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732176,"byte_end":10732189,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728828,"byte_end":10728921,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728926,"byte_end":10728978,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728983,"byte_end":10728986,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10728991,"byte_end":10729084,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729089,"byte_end":10729179,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729184,"byte_end":10729273,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729278,"byte_end":10729332,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729337,"byte_end":10729340,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729345,"byte_end":10729438,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729443,"byte_end":10729536,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729541,"byte_end":10729634,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729639,"byte_end":10729670,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729675,"byte_end":10729678,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729683,"byte_end":10729772,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729777,"byte_end":10729802,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729807,"byte_end":10729810,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729815,"byte_end":10729827,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729832,"byte_end":10729835,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729840,"byte_end":10729933,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729938,"byte_end":10729971,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729976,"byte_end":10729979,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10729984,"byte_end":10730079,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730084,"byte_end":10730122,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730127,"byte_end":10730130,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730135,"byte_end":10730230,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730235,"byte_end":10730327,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730332,"byte_end":10730421,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730426,"byte_end":10730429,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730434,"byte_end":10730447,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730452,"byte_end":10730505,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730510,"byte_end":10730569,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730574,"byte_end":10730581,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730586,"byte_end":10730589,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730594,"byte_end":10730688,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730693,"byte_end":10730780,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730785,"byte_end":10730845,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730850,"byte_end":10730853,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730858,"byte_end":10730872,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730877,"byte_end":10730880,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730885,"byte_end":10730971,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10730976,"byte_end":10731070,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731075,"byte_end":10731171,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731176,"byte_end":10731268,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731273,"byte_end":10731329,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731334,"byte_end":10731337,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731342,"byte_end":10731349,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731354,"byte_end":10731410,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731415,"byte_end":10731459,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731464,"byte_end":10731467,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731472,"byte_end":10731503,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731508,"byte_end":10731511,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731516,"byte_end":10731593,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731598,"byte_end":10731629,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731634,"byte_end":10731637,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731642,"byte_end":10731672,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731677,"byte_end":10731707,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731712,"byte_end":10731715,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731720,"byte_end":10731797,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731802,"byte_end":10731874,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731879,"byte_end":10731882,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731887,"byte_end":10731908,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731913,"byte_end":10731973,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10731978,"byte_end":10732060,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732065,"byte_end":10732081,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732086,"byte_end":10732121,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732126,"byte_end":10732135,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732140,"byte_end":10732145,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732150,"byte_end":10732157,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733074,"byte_end":10733079,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732289,"byte_end":10732384,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732389,"byte_end":10732406,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732411,"byte_end":10732414,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732419,"byte_end":10732513,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732518,"byte_end":10732610,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732615,"byte_end":10732683,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732688,"byte_end":10732691,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732696,"byte_end":10732788,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732793,"byte_end":10732796,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732801,"byte_end":10732815,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732820,"byte_end":10732823,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732828,"byte_end":10732835,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732840,"byte_end":10732873,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732878,"byte_end":10732881,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732886,"byte_end":10732916,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732921,"byte_end":10732946,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10732951,"byte_end":10733015,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733020,"byte_end":10733027,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733032,"byte_end":10733050,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733055,"byte_end":10733062,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734241,"byte_end":10734246,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733203,"byte_end":10733254,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733259,"byte_end":10733262,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733267,"byte_end":10733357,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733362,"byte_end":10733456,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733461,"byte_end":10733555,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733560,"byte_end":10733612,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733617,"byte_end":10733620,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733625,"byte_end":10733718,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733723,"byte_end":10733726,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733731,"byte_end":10733745,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733750,"byte_end":10733753,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733758,"byte_end":10733765,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733770,"byte_end":10733819,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733824,"byte_end":10733868,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733873,"byte_end":10733876,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733881,"byte_end":10733910,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733915,"byte_end":10733948,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733953,"byte_end":10733958,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10733963,"byte_end":10734002,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734007,"byte_end":10734061,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734066,"byte_end":10734071,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734076,"byte_end":10734094,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734099,"byte_end":10734104,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734109,"byte_end":10734148,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734153,"byte_end":10734207,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734212,"byte_end":10734217,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734222,"byte_end":10734229,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735573,"byte_end":10735584,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734370,"byte_end":10734461,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734466,"byte_end":10734469,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734474,"byte_end":10734565,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734570,"byte_end":10734666,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734671,"byte_end":10734765,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734770,"byte_end":10734789,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734794,"byte_end":10734797,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734802,"byte_end":10734896,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734901,"byte_end":10734943,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734948,"byte_end":10734951,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734956,"byte_end":10734970,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734975,"byte_end":10734978,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734983,"byte_end":10734990,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10734995,"byte_end":10735044,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735049,"byte_end":10735093,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735098,"byte_end":10735118,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735123,"byte_end":10735151,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735156,"byte_end":10735159,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735164,"byte_end":10735193,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735198,"byte_end":10735231,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735236,"byte_end":10735241,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735246,"byte_end":10735285,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735290,"byte_end":10735344,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735349,"byte_end":10735354,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735359,"byte_end":10735426,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735431,"byte_end":10735436,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735441,"byte_end":10735480,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735485,"byte_end":10735539,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735544,"byte_end":10735549,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10735554,"byte_end":10735561,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736730,"byte_end":10736739,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736189,"byte_end":10736244,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736249,"byte_end":10736252,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736257,"byte_end":10736332,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736337,"byte_end":10736387,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736392,"byte_end":10736395,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736400,"byte_end":10736484,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736489,"byte_end":10736492,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736497,"byte_end":10736511,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736516,"byte_end":10736519,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736524,"byte_end":10736531,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736536,"byte_end":10736569,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736574,"byte_end":10736577,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736582,"byte_end":10736612,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736617,"byte_end":10736647,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736652,"byte_end":10736706,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736711,"byte_end":10736718,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10740038,"byte_end":10740049,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737149,"byte_end":10737236,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737237,"byte_end":10737240,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737241,"byte_end":10737336,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737337,"byte_end":10737426,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737427,"byte_end":10737430,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737431,"byte_end":10737524,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737525,"byte_end":10737562,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737563,"byte_end":10737566,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737567,"byte_end":10737663,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737664,"byte_end":10737667,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737668,"byte_end":10737680,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737681,"byte_end":10737684,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737685,"byte_end":10737775,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737776,"byte_end":10737843,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737844,"byte_end":10737847,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737848,"byte_end":10737862,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737863,"byte_end":10737866,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737867,"byte_end":10737874,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737875,"byte_end":10737924,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737925,"byte_end":10737970,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737971,"byte_end":10737974,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737975,"byte_end":10738002,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738003,"byte_end":10738006,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738007,"byte_end":10738019,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738020,"byte_end":10738075,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738076,"byte_end":10738122,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738123,"byte_end":10738126,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738127,"byte_end":10738201,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738202,"byte_end":10738252,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738253,"byte_end":10738256,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738257,"byte_end":10738286,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738287,"byte_end":10738343,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738344,"byte_end":10738355,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738356,"byte_end":10738359,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738360,"byte_end":10738441,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738442,"byte_end":10738447,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738448,"byte_end":10738455,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738456,"byte_end":10738459,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738460,"byte_end":10738554,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738555,"byte_end":10738558,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738559,"byte_end":10738653,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738654,"byte_end":10738739,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738740,"byte_end":10738743,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738744,"byte_end":10738843,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738844,"byte_end":10738942,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738943,"byte_end":10738963,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738964,"byte_end":10738967,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738968,"byte_end":10738975,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10738976,"byte_end":10739025,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739026,"byte_end":10739057,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739058,"byte_end":10739103,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739104,"byte_end":10739107,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739108,"byte_end":10739129,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739130,"byte_end":10739160,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739161,"byte_end":10739166,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739167,"byte_end":10739170,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739171,"byte_end":10739191,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739192,"byte_end":10739222,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739223,"byte_end":10739253,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739254,"byte_end":10739259,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739260,"byte_end":10739263,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739264,"byte_end":10739295,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739296,"byte_end":10739324,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739325,"byte_end":10739345,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739346,"byte_end":10739382,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739383,"byte_end":10739460,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739461,"byte_end":10739464,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739465,"byte_end":10739516,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739517,"byte_end":10739557,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739558,"byte_end":10739632,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739633,"byte_end":10739636,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739637,"byte_end":10739725,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739726,"byte_end":10739776,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739777,"byte_end":10739829,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739830,"byte_end":10739858,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739859,"byte_end":10739862,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739863,"byte_end":10739895,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739896,"byte_end":10739913,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739914,"byte_end":10739927,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739928,"byte_end":10739937,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739938,"byte_end":10739943,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739944,"byte_end":10739951,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739952,"byte_end":10739955,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739956,"byte_end":10739985,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10739986,"byte_end":10740013,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10740014,"byte_end":10740023,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":892},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":10796041,"byte_end":10796044,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":10795995,"byte_end":10796023,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":10796024,"byte_end":10796033,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":10796169,"byte_end":10796178,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":10796100,"byte_end":10796151,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":10796152,"byte_end":10796161,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":896},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":10796288,"byte_end":10796305,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":10796239,"byte_end":10796280,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10650778,"byte_end":10650798,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10652225,"byte_end":10652233,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10656007,"byte_end":10656008,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659227,"byte_end":10659233,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659298,"byte_end":10659304,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659320,"byte_end":10659326,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659659,"byte_end":10659665,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10680628,"byte_end":10680634,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10680981,"byte_end":10680987,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10681275,"byte_end":10681281,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10681628,"byte_end":10681634,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10681746,"byte_end":10681752,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10682147,"byte_end":10682153,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10682256,"byte_end":10682262,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10682382,"byte_end":10682388,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10682737,"byte_end":10682743,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683956,"byte_end":10683961,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684468,"byte_end":10684473,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686123,"byte_end":10686128,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687798,"byte_end":10687803,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687993,"byte_end":10687998,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10688276,"byte_end":10688281,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10688422,"byte_end":10688427,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10688620,"byte_end":10688625,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10688791,"byte_end":10688796,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10688886,"byte_end":10688891,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689364,"byte_end":10689369,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689479,"byte_end":10689484,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689606,"byte_end":10689611,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689717,"byte_end":10689722,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690223,"byte_end":10690229,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690403,"byte_end":10690409,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690464,"byte_end":10690470,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690716,"byte_end":10690722,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691353,"byte_end":10691359,"line_start":1293,"line_end":1293,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10698316,"byte_end":10698322,"line_start":1517,"line_end":1517,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10698885,"byte_end":10698891,"line_start":1539,"line_end":1539,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699018,"byte_end":10699024,"line_start":1545,"line_end":1545,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699098,"byte_end":10699104,"line_start":1547,"line_end":1547,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699269,"byte_end":10699275,"line_start":1553,"line_end":1553,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699423,"byte_end":10699429,"line_start":1559,"line_end":1559,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699732,"byte_end":10699738,"line_start":1570,"line_end":1570,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699929,"byte_end":10699935,"line_start":1576,"line_end":1576,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701172,"byte_end":10701181,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701206,"byte_end":10701215,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701237,"byte_end":10701246,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701360,"byte_end":10701369,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701611,"byte_end":10701620,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701818,"byte_end":10701827,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701955,"byte_end":10701964,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702138,"byte_end":10702147,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702258,"byte_end":10702269,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702729,"byte_end":10702740,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702887,"byte_end":10702898,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":10713641,"byte_end":10713649,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":10713773,"byte_end":10713781,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":10717641,"byte_end":10717646,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":10719450,"byte_end":10719461,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723341,"byte_end":10723346,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736864,"byte_end":10736869,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737039,"byte_end":10737044,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10740328,"byte_end":10740340,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10743413,"byte_end":10743416,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10743426,"byte_end":10743429,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10744378,"byte_end":10744381,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10747655,"byte_end":10747658,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10748057,"byte_end":10748060,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10748487,"byte_end":10748496,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10748506,"byte_end":10748515,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10749197,"byte_end":10749203,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10754327,"byte_end":10754332,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10763057,"byte_end":10763062,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":10769127,"byte_end":10769132,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":10769268,"byte_end":10769273,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":10769786,"byte_end":10769790,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":10772373,"byte_end":10772377,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":10772909,"byte_end":10772913,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":10782734,"byte_end":10782739,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":10782776,"byte_end":10782781,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":10782797,"byte_end":10782802,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":10788722,"byte_end":10788727,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10650778,"byte_end":10650798,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10652225,"byte_end":10652233,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":37222},"to":{"krate":0,"index":113}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10656007,"byte_end":10656008,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":130}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659227,"byte_end":10659233,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659298,"byte_end":10659304,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659320,"byte_end":10659326,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10659659,"byte_end":10659665,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10680628,"byte_end":10680634,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10680981,"byte_end":10680987,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10681275,"byte_end":10681281,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10681628,"byte_end":10681634,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10681746,"byte_end":10681752,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10682147,"byte_end":10682153,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10682256,"byte_end":10682262,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10682382,"byte_end":10682388,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10682737,"byte_end":10682743,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10683956,"byte_end":10683961,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":249},"to":{"krate":0,"index":245}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10684468,"byte_end":10684473,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10686123,"byte_end":10686128,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687798,"byte_end":10687803,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10687993,"byte_end":10687998,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10688276,"byte_end":10688281,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10688422,"byte_end":10688427,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10688620,"byte_end":10688625,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10688791,"byte_end":10688796,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10688886,"byte_end":10688891,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689364,"byte_end":10689369,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2615}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689479,"byte_end":10689484,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2618}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689606,"byte_end":10689611,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10689717,"byte_end":10689722,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690223,"byte_end":10690229,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690403,"byte_end":10690409,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690464,"byte_end":10690470,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":303},"to":{"krate":0,"index":245}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10690716,"byte_end":10690722,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10691353,"byte_end":10691359,"line_start":1293,"line_end":1293,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10698316,"byte_end":10698322,"line_start":1517,"line_end":1517,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10698885,"byte_end":10698891,"line_start":1539,"line_end":1539,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699018,"byte_end":10699024,"line_start":1545,"line_end":1545,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699098,"byte_end":10699104,"line_start":1547,"line_end":1547,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699269,"byte_end":10699275,"line_start":1553,"line_end":1553,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2703}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699423,"byte_end":10699429,"line_start":1559,"line_end":1559,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699732,"byte_end":10699738,"line_start":1570,"line_end":1570,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":10699929,"byte_end":10699935,"line_start":1576,"line_end":1576,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701172,"byte_end":10701181,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701206,"byte_end":10701215,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701237,"byte_end":10701246,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701360,"byte_end":10701369,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701611,"byte_end":10701620,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701818,"byte_end":10701827,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10701955,"byte_end":10701964,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702138,"byte_end":10702147,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702258,"byte_end":10702269,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702729,"byte_end":10702740,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":10702887,"byte_end":10702898,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":10713641,"byte_end":10713649,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":10713773,"byte_end":10713781,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":10717641,"byte_end":10717646,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":10719450,"byte_end":10719461,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10723341,"byte_end":10723346,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10736864,"byte_end":10736869,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10737039,"byte_end":10737044,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":10740328,"byte_end":10740340,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10743413,"byte_end":10743416,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10743426,"byte_end":10743429,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10744378,"byte_end":10744381,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10747655,"byte_end":10747658,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10748057,"byte_end":10748060,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10748487,"byte_end":10748496,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10748506,"byte_end":10748515,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10749197,"byte_end":10749203,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10754327,"byte_end":10754332,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":10763057,"byte_end":10763062,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":622},"to":{"krate":0,"index":681}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":10769127,"byte_end":10769132,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":10769268,"byte_end":10769273,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":10769786,"byte_end":10769790,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":10772373,"byte_end":10772377,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":850},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":10772909,"byte_end":10772913,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":7653}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":10782734,"byte_end":10782739,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":10782776,"byte_end":10782781,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":10782797,"byte_end":10782802,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":10788722,"byte_end":10788727,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3251}}]}