{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9","program":"/Users/samundrakarki/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"slab\"","--cfg","feature=\"time\"","-C","metadata=a6d690e3a50dd758","-C","extra-filename=-a6d690e3a50dd758","--out-dir","/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps","-L","dependency=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps","--extern","bytes=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libbytes-1b50eb901ce47ab0.rmeta","--extern","futures_core=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libfutures_core-409160dbb14acc23.rmeta","--extern","futures_sink=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libfutures_sink-ca258e6253d175be.rmeta","--extern","log=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/liblog-d065359d0dd750de.rmeta","--extern","pin_project_lite=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libpin_project_lite-5b06ae98294b8f10.rmeta","--extern","slab=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libslab-14f08ac58822e74a.rmeta","--extern","tokio=/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libtokio-6ae37e6b47656a1d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/samundrakarki/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/samundrakarki/mokshya/nft_oracle/target/rls/debug/deps/libtokio_util-a6d690e3a50dd758.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[1194898381981191969,0]},"crate_root":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src","external_crates":[{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18209756222486151562,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[18223145686901155897,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14433101958683640425,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15722400896539721154,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[382214965992916939,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12260471395692023054,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15696538619420672016,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15516093453040911438,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14430044855280342380,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[22492058053637715,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1365830122759399854,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[2559965663903648119,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15316470272468687976,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[643092319478642194,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[981374929740806444,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10791241492110567838,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[7534896682886677764,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":18,"id":{"name":"futures_core","disambiguator":[3894465240016323803,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":19,"id":{"name":"futures_sink","disambiguator":[14245199448296957513,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":20,"id":{"name":"tokio","disambiguator":[7635598522583471575,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":21,"id":{"name":"parking_lot","disambiguator":[9247054443842593873,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":22,"id":{"name":"instant","disambiguator":[938301203521666536,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":23,"id":{"name":"cfg_if","disambiguator":[17816606192966835472,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":24,"id":{"name":"lock_api","disambiguator":[5955616476029180091,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":25,"id":{"name":"scopeguard","disambiguator":[17903739936202682887,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":26,"id":{"name":"parking_lot_core","disambiguator":[7003415762481910688,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":27,"id":{"name":"smallvec","disambiguator":[7650074017502233216,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":28,"id":{"name":"libc","disambiguator":[13528417305039612847,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","num":29,"id":{"name":"pin_project_lite","disambiguator":[16566360578500117942,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":30,"id":{"name":"mio","disambiguator":[7885222317601970913,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","num":31,"id":{"name":"log","disambiguator":[5673694100450531445,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":32,"id":{"name":"bytes","disambiguator":[11183805907509104744,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":33,"id":{"name":"once_cell","disambiguator":[1034416350564707972,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":34,"id":{"name":"tokio_macros","disambiguator":[7845484553270298757,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":35,"id":{"name":"memchr","disambiguator":[524603796668977887,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":36,"id":{"name":"num_cpus","disambiguator":[8183116298664798063,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":37,"id":{"name":"signal_hook_registry","disambiguator":[11094423519706054736,0]}},{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","num":38,"id":{"name":"slab","disambiguator":[8906701306253732183,0]}}],"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1191},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752841,"byte_end":12752851,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752890,"byte_end":12752897,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752936,"byte_end":12752943,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1804},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12753105,"byte_end":12753111,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12753113,"byte_end":12753124,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1763},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12753172,"byte_end":12753182,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1722},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12753231,"byte_end":12753242,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1251},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12753304,"byte_end":12753324,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1008},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12753326,"byte_end":12753351,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1269},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12753400,"byte_end":12753410,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12753412,"byte_end":12753427,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1299},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12753492,"byte_end":12753509,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12753511,"byte_end":12753533,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1568},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":12848073,"byte_end":12848083,"line_start":18,"line_end":18,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":1331}},{"kind":"Use","ref_id":{"krate":0,"index":1622},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6970,"byte_end":6979,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6981,"byte_end":6998,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7000,"byte_end":7025,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1697},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7088,"byte_end":7098,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7145,"byte_end":7158,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7201,"byte_end":7218,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":511},{"krate":0,"index":1331},{"krate":0,"index":14},{"krate":0,"index":393},{"krate":0,"index":462}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1188}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12742569,"byte_end":12742622,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12742623,"byte_end":12742626,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12742627,"byte_end":12742702,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12742703,"byte_end":12742768,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12742769,"byte_end":12742772,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12742773,"byte_end":12742853,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12742854,"byte_end":12742929,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12742930,"byte_end":12742978,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12742979,"byte_end":12742982,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12742983,"byte_end":12743006,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743007,"byte_end":12743010,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743011,"byte_end":12743090,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743091,"byte_end":12743170,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743171,"byte_end":12743242,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743243,"byte_end":12743313,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743314,"byte_end":12743392,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743393,"byte_end":12743469,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743470,"byte_end":12743503,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743504,"byte_end":12743507,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743508,"byte_end":12743588,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743589,"byte_end":12743669,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743670,"byte_end":12743720,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743721,"byte_end":12743724,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743725,"byte_end":12743776,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743777,"byte_end":12743826,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743827,"byte_end":12743878,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743879,"byte_end":12743882,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743883,"byte_end":12743948,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743949,"byte_end":12743952,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12743953,"byte_end":12744030,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744031,"byte_end":12744072,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744073,"byte_end":12744076,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744077,"byte_end":12744157,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744158,"byte_end":12744237,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744238,"byte_end":12744316,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744317,"byte_end":12744396,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744397,"byte_end":12744411,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744412,"byte_end":12744415,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744416,"byte_end":12744495,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744496,"byte_end":12744575,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744576,"byte_end":12744593,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744594,"byte_end":12744597,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744598,"byte_end":12744675,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744676,"byte_end":12744755,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744756,"byte_end":12744833,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744834,"byte_end":12744904,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744905,"byte_end":12744954,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744955,"byte_end":12744958,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744959,"byte_end":12744972,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12744973,"byte_end":12745005,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745006,"byte_end":12745073,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745074,"byte_end":12745188,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745189,"byte_end":12745226,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745227,"byte_end":12745288,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745289,"byte_end":12745338,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745339,"byte_end":12745342,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745343,"byte_end":12745384,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745385,"byte_end":12745395,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745396,"byte_end":12745480,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745481,"byte_end":12745537,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745538,"byte_end":12745541,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745542,"byte_end":12745563,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745564,"byte_end":12745631,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745632,"byte_end":12745660,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745661,"byte_end":12745674,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745675,"byte_end":12745693,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745694,"byte_end":12745703,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745704,"byte_end":12745707,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745708,"byte_end":12745767,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745768,"byte_end":12745792,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745793,"byte_end":12745802,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745803,"byte_end":12745808,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745809,"byte_end":12745817,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745818,"byte_end":12745825,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745826,"byte_end":12745900,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745901,"byte_end":12745904,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745905,"byte_end":12745927,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745928,"byte_end":12745931,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12745932,"byte_end":12746009,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746010,"byte_end":12746086,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746087,"byte_end":12746166,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746167,"byte_end":12746221,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746222,"byte_end":12746225,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746226,"byte_end":12746270,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746271,"byte_end":12746278,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746279,"byte_end":12746314,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746315,"byte_end":12746346,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746347,"byte_end":12746350,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746351,"byte_end":12746380,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746381,"byte_end":12746384,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746385,"byte_end":12746424,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746425,"byte_end":12746428,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746429,"byte_end":12746467,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746468,"byte_end":12746495,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746496,"byte_end":12746532,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746533,"byte_end":12746536,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746537,"byte_end":12746555,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746556,"byte_end":12746578,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746579,"byte_end":12746609,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746610,"byte_end":12746664,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746665,"byte_end":12746695,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746696,"byte_end":12746753,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746754,"byte_end":12746786,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746787,"byte_end":12746800,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746801,"byte_end":12746804,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746805,"byte_end":12746839,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746840,"byte_end":12746884,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746885,"byte_end":12746937,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12746938,"byte_end":12747005,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747006,"byte_end":12747009,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747010,"byte_end":12747084,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747085,"byte_end":12747151,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747152,"byte_end":12747181,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747182,"byte_end":12747229,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747230,"byte_end":12747282,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747283,"byte_end":12747354,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747355,"byte_end":12747374,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747375,"byte_end":12747388,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747389,"byte_end":12747392,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747393,"byte_end":12747432,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747433,"byte_end":12747488,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747489,"byte_end":12747507,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747508,"byte_end":12747584,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747585,"byte_end":12747651,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747652,"byte_end":12747704,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747705,"byte_end":12747708,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747709,"byte_end":12747789,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747790,"byte_end":12747815,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747816,"byte_end":12747848,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747849,"byte_end":12747862,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747863,"byte_end":12747866,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747867,"byte_end":12747939,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747940,"byte_end":12747966,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12747967,"byte_end":12748018,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748019,"byte_end":12748055,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748056,"byte_end":12748059,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748060,"byte_end":12748138,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748139,"byte_end":12748182,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748183,"byte_end":12748230,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748231,"byte_end":12748267,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748268,"byte_end":12748312,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748313,"byte_end":12748369,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748370,"byte_end":12748418,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748419,"byte_end":12748441,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748442,"byte_end":12748460,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748461,"byte_end":12748474,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748475,"byte_end":12748484,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748485,"byte_end":12748490,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748491,"byte_end":12748498,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748499,"byte_end":12748502,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748503,"byte_end":12748526,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748527,"byte_end":12748530,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748531,"byte_end":12748609,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748610,"byte_end":12748683,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748684,"byte_end":12748760,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748761,"byte_end":12748841,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748842,"byte_end":12748858,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748859,"byte_end":12748862,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748863,"byte_end":12748943,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12748944,"byte_end":12749023,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749024,"byte_end":12749104,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749105,"byte_end":12749177,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749178,"byte_end":12749181,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749182,"byte_end":12749259,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749260,"byte_end":12749338,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749339,"byte_end":12749412,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749413,"byte_end":12749479,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749480,"byte_end":12749483,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749484,"byte_end":12749497,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749498,"byte_end":12749531,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749532,"byte_end":12749566,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749567,"byte_end":12749604,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749605,"byte_end":12749672,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749673,"byte_end":12749708,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749709,"byte_end":12749770,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749771,"byte_end":12749817,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749818,"byte_end":12749879,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749880,"byte_end":12749883,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749884,"byte_end":12749912,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749913,"byte_end":12749916,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749917,"byte_end":12749958,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749959,"byte_end":12749969,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749970,"byte_end":12749994,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12749995,"byte_end":12750069,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750070,"byte_end":12750112,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750113,"byte_end":12750127,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750128,"byte_end":12750185,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750186,"byte_end":12750235,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750236,"byte_end":12750250,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750251,"byte_end":12750288,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750289,"byte_end":12750340,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750341,"byte_end":12750387,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750388,"byte_end":12750418,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750419,"byte_end":12750433,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750434,"byte_end":12750443,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750444,"byte_end":12750449,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750450,"byte_end":12750457,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750458,"byte_end":12750465,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750466,"byte_end":12750541,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750542,"byte_end":12750615,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750616,"byte_end":12750658,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750659,"byte_end":12750662,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750663,"byte_end":12750685,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750686,"byte_end":12750689,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750690,"byte_end":12750767,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750768,"byte_end":12750844,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750845,"byte_end":12750921,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750922,"byte_end":12750945,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750946,"byte_end":12750949,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750950,"byte_end":12750995,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12750996,"byte_end":12751003,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751004,"byte_end":12751039,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751040,"byte_end":12751064,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751065,"byte_end":12751068,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751069,"byte_end":12751098,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751099,"byte_end":12751102,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751103,"byte_end":12751142,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751143,"byte_end":12751146,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751147,"byte_end":12751193,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751194,"byte_end":12751230,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751231,"byte_end":12751234,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751235,"byte_end":12751326,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751327,"byte_end":12751401,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751402,"byte_end":12751424,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751425,"byte_end":12751458,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751459,"byte_end":12751506,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751507,"byte_end":12751559,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751560,"byte_end":12751635,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751636,"byte_end":12751655,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751656,"byte_end":12751669,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751670,"byte_end":12751673,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751674,"byte_end":12751726,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751727,"byte_end":12751804,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751805,"byte_end":12751869,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751870,"byte_end":12751873,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751874,"byte_end":12751917,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751918,"byte_end":12751958,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751959,"byte_end":12751962,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12751963,"byte_end":12752020,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752021,"byte_end":12752067,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752068,"byte_end":12752119,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752120,"byte_end":12752138,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752139,"byte_end":12752148,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752149,"byte_end":12752154,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752155,"byte_end":12752162,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752163,"byte_end":12752166,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752167,"byte_end":12752206,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752207,"byte_end":12752248,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752249,"byte_end":12752285,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752286,"byte_end":12752318,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752319,"byte_end":12752415,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752416,"byte_end":12752467,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752468,"byte_end":12752521,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752522,"byte_end":12752565,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752566,"byte_end":12752610,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752611,"byte_end":12752659,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752660,"byte_end":12752708,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752709,"byte_end":12752755,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12752756,"byte_end":12752795,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754819,"byte_end":12754829,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12753662,"byte_end":12753747,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12753748,"byte_end":12753751,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12753752,"byte_end":12753790,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12753791,"byte_end":12753829,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12753830,"byte_end":12753833,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12753834,"byte_end":12753847,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12753848,"byte_end":12753851,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12753852,"byte_end":12753933,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12753934,"byte_end":12753937,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12753938,"byte_end":12753977,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12753978,"byte_end":12754011,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754012,"byte_end":12754041,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754042,"byte_end":12754045,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754046,"byte_end":12754053,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754054,"byte_end":12754072,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754073,"byte_end":12754103,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754104,"byte_end":12754128,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754129,"byte_end":12754136,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754137,"byte_end":12754166,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754167,"byte_end":12754219,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754220,"byte_end":12754223,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754224,"byte_end":12754242,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754243,"byte_end":12754260,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754261,"byte_end":12754341,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754342,"byte_end":12754376,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754377,"byte_end":12754430,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754431,"byte_end":12754442,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754443,"byte_end":12754450,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754451,"byte_end":12754456,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754457,"byte_end":12754504,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754505,"byte_end":12754558,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754559,"byte_end":12754617,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754618,"byte_end":12754697,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754698,"byte_end":12754710,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754711,"byte_end":12754718,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754719,"byte_end":12754726,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754727,"byte_end":12754730,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754931,"byte_end":12754934,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754858,"byte_end":12754919,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756935,"byte_end":12756942,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12755649,"byte_end":12755684,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12755685,"byte_end":12755688,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12755689,"byte_end":12755758,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12755759,"byte_end":12755838,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12755839,"byte_end":12755911,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12755912,"byte_end":12755936,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12755937,"byte_end":12755940,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12755941,"byte_end":12756009,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756010,"byte_end":12756087,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756088,"byte_end":12756149,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756150,"byte_end":12756153,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756154,"byte_end":12756215,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756216,"byte_end":12756278,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756279,"byte_end":12756282,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756283,"byte_end":12756346,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756347,"byte_end":12756410,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756411,"byte_end":12756490,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756491,"byte_end":12756565,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756566,"byte_end":12756585,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756586,"byte_end":12756589,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756590,"byte_end":12756658,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756659,"byte_end":12756721,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756722,"byte_end":12756797,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756798,"byte_end":12756838,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756839,"byte_end":12756842,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756843,"byte_end":12756879,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756880,"byte_end":12756924,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756990,"byte_end":12756994,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12756949,"byte_end":12756980,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757760,"byte_end":12757765,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757001,"byte_end":12757053,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757058,"byte_end":12757061,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757066,"byte_end":12757135,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757140,"byte_end":12757210,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757215,"byte_end":12757261,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757266,"byte_end":12757269,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757274,"byte_end":12757350,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757355,"byte_end":12757430,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757435,"byte_end":12757510,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757515,"byte_end":12757555,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757560,"byte_end":12757563,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757568,"byte_end":12757642,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757647,"byte_end":12757693,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757698,"byte_end":12757701,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757706,"byte_end":12757750,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760701,"byte_end":12760707,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757789,"byte_end":12757854,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757859,"byte_end":12757862,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757867,"byte_end":12757941,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12757946,"byte_end":12758018,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758023,"byte_end":12758096,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758101,"byte_end":12758144,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758149,"byte_end":12758152,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758157,"byte_end":12758230,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758235,"byte_end":12758298,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758303,"byte_end":12758378,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758383,"byte_end":12758458,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758463,"byte_end":12758486,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758491,"byte_end":12758494,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758499,"byte_end":12758571,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758576,"byte_end":12758650,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758655,"byte_end":12758725,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758730,"byte_end":12758733,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758738,"byte_end":12758806,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758811,"byte_end":12758882,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758887,"byte_end":12758967,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758972,"byte_end":12758984,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758989,"byte_end":12758992,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12758997,"byte_end":12759067,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759072,"byte_end":12759147,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759152,"byte_end":12759189,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759194,"byte_end":12759197,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759202,"byte_end":12759238,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759243,"byte_end":12759287,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759292,"byte_end":12759295,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759300,"byte_end":12759323,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759328,"byte_end":12759331,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759336,"byte_end":12759410,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759415,"byte_end":12759489,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759494,"byte_end":12759547,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759552,"byte_end":12759555,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759560,"byte_end":12759631,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759636,"byte_end":12759706,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759711,"byte_end":12759727,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759732,"byte_end":12759735,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759740,"byte_end":12759753,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759758,"byte_end":12759776,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759781,"byte_end":12759786,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759791,"byte_end":12759817,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759822,"byte_end":12759859,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759864,"byte_end":12759869,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759874,"byte_end":12759895,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759900,"byte_end":12759905,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759910,"byte_end":12759940,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759945,"byte_end":12759959,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12759964,"byte_end":12759995,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760000,"byte_end":12760033,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760038,"byte_end":12760041,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760046,"byte_end":12760139,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760144,"byte_end":12760162,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760167,"byte_end":12760170,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760175,"byte_end":12760247,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760252,"byte_end":12760312,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760317,"byte_end":12760369,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760374,"byte_end":12760436,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760441,"byte_end":12760508,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760513,"byte_end":12760516,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760521,"byte_end":12760549,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760554,"byte_end":12760563,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760568,"byte_end":12760573,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760578,"byte_end":12760585,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760590,"byte_end":12760593,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760598,"byte_end":12760667,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760672,"byte_end":12760693,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761873,"byte_end":12761883,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760788,"byte_end":12760860,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760865,"byte_end":12760914,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760919,"byte_end":12760922,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12760927,"byte_end":12760995,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761000,"byte_end":12761067,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761072,"byte_end":12761140,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761145,"byte_end":12761221,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761226,"byte_end":12761292,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761297,"byte_end":12761300,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761305,"byte_end":12761373,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761378,"byte_end":12761453,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761458,"byte_end":12761533,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761538,"byte_end":12761610,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761615,"byte_end":12761657,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761662,"byte_end":12761665,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761670,"byte_end":12761745,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761750,"byte_end":12761828,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12761833,"byte_end":12761865,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12763491,"byte_end":12763497,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12762301,"byte_end":12762381,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12762386,"byte_end":12762462,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12762467,"byte_end":12762470,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12762475,"byte_end":12762550,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12762555,"byte_end":12762625,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12762630,"byte_end":12762701,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12762706,"byte_end":12762778,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12762783,"byte_end":12762841,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12762846,"byte_end":12762849,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12762854,"byte_end":12762923,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12762928,"byte_end":12763003,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12763008,"byte_end":12763084,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12763089,"byte_end":12763111,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12763116,"byte_end":12763119,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12763124,"byte_end":12763197,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12763202,"byte_end":12763275,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12763280,"byte_end":12763356,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12763361,"byte_end":12763364,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12763369,"byte_end":12763405,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12763410,"byte_end":12763442,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":12763447,"byte_end":12763483,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12763831,"byte_end":12763838,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12763676,"byte_end":12763748,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12763749,"byte_end":12763769,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12763770,"byte_end":12763773,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12763774,"byte_end":12763820,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":580},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12764103,"byte_end":12764108,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12763851,"byte_end":12763883,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12763888,"byte_end":12763891,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12763896,"byte_end":12763973,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12763978,"byte_end":12764034,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12764039,"byte_end":12764042,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12764047,"byte_end":12764093,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12764459,"byte_end":12764465,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12764132,"byte_end":12764177,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12764182,"byte_end":12764185,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12764190,"byte_end":12764264,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12764269,"byte_end":12764349,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12764354,"byte_end":12764392,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12764397,"byte_end":12764400,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":12764405,"byte_end":12764451,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778102,"byte_end":12778108,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1807}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779881,"byte_end":12779884,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778250,"byte_end":12778330,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778335,"byte_end":12778416,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778421,"byte_end":12778424,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778429,"byte_end":12778504,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778509,"byte_end":12778579,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778584,"byte_end":12778653,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778658,"byte_end":12778730,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778735,"byte_end":12778793,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778798,"byte_end":12778801,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778806,"byte_end":12778877,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778882,"byte_end":12778959,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778964,"byte_end":12779040,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779045,"byte_end":12779067,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779072,"byte_end":12779075,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779080,"byte_end":12779153,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779158,"byte_end":12779231,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779236,"byte_end":12779312,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779317,"byte_end":12779320,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779325,"byte_end":12779401,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779406,"byte_end":12779482,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779487,"byte_end":12779562,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779567,"byte_end":12779602,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779607,"byte_end":12779610,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779615,"byte_end":12779651,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779656,"byte_end":12779688,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779693,"byte_end":12779730,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779735,"byte_end":12779773,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12779778,"byte_end":12779869,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12781492,"byte_end":12781505,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780097,"byte_end":12780177,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780182,"byte_end":12780263,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780268,"byte_end":12780317,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780322,"byte_end":12780325,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780330,"byte_end":12780405,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780410,"byte_end":12780480,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780485,"byte_end":12780554,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780559,"byte_end":12780631,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780636,"byte_end":12780694,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780699,"byte_end":12780702,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780707,"byte_end":12780778,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780783,"byte_end":12780860,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780865,"byte_end":12780941,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780946,"byte_end":12780968,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780973,"byte_end":12780976,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12780981,"byte_end":12781054,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12781059,"byte_end":12781132,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12781137,"byte_end":12781213,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12781218,"byte_end":12781221,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12781226,"byte_end":12781262,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12781267,"byte_end":12781299,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12781304,"byte_end":12781341,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12781346,"byte_end":12781384,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12781389,"byte_end":12781480,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783652,"byte_end":12783662,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782075,"byte_end":12782155,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782160,"byte_end":12782241,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782246,"byte_end":12782249,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782254,"byte_end":12782329,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782334,"byte_end":12782404,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782409,"byte_end":12782480,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782485,"byte_end":12782557,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782562,"byte_end":12782620,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782625,"byte_end":12782628,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782633,"byte_end":12782704,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782709,"byte_end":12782786,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782791,"byte_end":12782867,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782872,"byte_end":12782894,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782899,"byte_end":12782902,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782907,"byte_end":12782986,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782991,"byte_end":12783068,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783073,"byte_end":12783076,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783081,"byte_end":12783154,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783159,"byte_end":12783232,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783237,"byte_end":12783313,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783318,"byte_end":12783321,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783326,"byte_end":12783362,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783367,"byte_end":12783399,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783404,"byte_end":12783442,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783447,"byte_end":12783485,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783490,"byte_end":12783544,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12783549,"byte_end":12783640,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784297,"byte_end":12784304,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784014,"byte_end":12784077,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784082,"byte_end":12784095,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784100,"byte_end":12784103,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784108,"byte_end":12784183,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784188,"byte_end":12784258,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784263,"byte_end":12784285,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784648,"byte_end":12784655,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784357,"byte_end":12784428,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784433,"byte_end":12784446,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784451,"byte_end":12784454,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784459,"byte_end":12784534,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784539,"byte_end":12784609,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784614,"byte_end":12784636,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785018,"byte_end":12785029,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784720,"byte_end":12784798,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784803,"byte_end":12784816,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784821,"byte_end":12784824,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784829,"byte_end":12784904,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784909,"byte_end":12784979,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12784984,"byte_end":12785006,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785376,"byte_end":12785381,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785125,"byte_end":12785183,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785188,"byte_end":12785201,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785206,"byte_end":12785209,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785214,"byte_end":12785288,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785293,"byte_end":12785364,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785693,"byte_end":12785702,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785434,"byte_end":12785500,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785505,"byte_end":12785518,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785523,"byte_end":12785526,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785531,"byte_end":12785605,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785610,"byte_end":12785681,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785822,"byte_end":12785833,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785767,"byte_end":12785810,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785968,"byte_end":12785983,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12785905,"byte_end":12785956,"line_start":212,"line_end":212,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786123,"byte_end":12786135,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786067,"byte_end":12786111,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786272,"byte_end":12786288,"line_start":223,"line_end":223,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786208,"byte_end":12786260,"line_start":222,"line_end":222,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786638,"byte_end":12786648,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786373,"byte_end":12786436,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786441,"byte_end":12786444,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786449,"byte_end":12786524,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786529,"byte_end":12786599,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786604,"byte_end":12786626,"line_start":231,"line_end":231,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12787020,"byte_end":12787030,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786698,"byte_end":12786772,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786777,"byte_end":12786818,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786823,"byte_end":12786826,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786831,"byte_end":12786906,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786911,"byte_end":12786981,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12786986,"byte_end":12787008,"line_start":241,"line_end":241,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789004,"byte_end":12789015,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12788689,"byte_end":12788760,"line_start":305,"line_end":305,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12788761,"byte_end":12788833,"line_start":306,"line_end":306,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12788834,"byte_end":12788894,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12788895,"byte_end":12788898,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12788899,"byte_end":12788935,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12788953,"byte_end":12788992,"line_start":311,"line_end":311,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789101,"byte_end":12789103,"line_start":314,"line_end":314,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789028,"byte_end":12789092,"line_start":313,"line_end":313,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789135,"byte_end":12789140,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789113,"byte_end":12789126,"line_start":316,"line_end":316,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789205,"byte_end":12789213,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789150,"byte_end":12789196,"line_start":319,"line_end":319,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789300,"byte_end":12789309,"line_start":323,"line_end":323,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789230,"byte_end":12789291,"line_start":322,"line_end":322,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789542,"byte_end":12789545,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789490,"byte_end":12789530,"line_start":331,"line_end":331,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1763},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12790274,"byte_end":12790284,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1766}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12790535,"byte_end":12790538,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12790467,"byte_end":12790523,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12790886,"byte_end":12790899,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12790770,"byte_end":12790852,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12790857,"byte_end":12790874,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791653,"byte_end":12791660,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791366,"byte_end":12791429,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791434,"byte_end":12791451,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791456,"byte_end":12791459,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791464,"byte_end":12791539,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791544,"byte_end":12791614,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791619,"byte_end":12791641,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792008,"byte_end":12792015,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791713,"byte_end":12791784,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791789,"byte_end":12791806,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791811,"byte_end":12791814,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791819,"byte_end":12791894,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791899,"byte_end":12791969,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791974,"byte_end":12791996,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792382,"byte_end":12792393,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792080,"byte_end":12792158,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792163,"byte_end":12792180,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792185,"byte_end":12792188,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792193,"byte_end":12792268,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792273,"byte_end":12792343,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792348,"byte_end":12792370,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792758,"byte_end":12792768,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792489,"byte_end":12792556,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792561,"byte_end":12792564,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792569,"byte_end":12792644,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792649,"byte_end":12792719,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792724,"byte_end":12792746,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792880,"byte_end":12792887,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792818,"byte_end":12792868,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12793010,"byte_end":12793021,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12792940,"byte_end":12792998,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12793141,"byte_end":12793152,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12793086,"byte_end":12793129,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12793282,"byte_end":12793297,"line_start":117,"line_end":117,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12793219,"byte_end":12793270,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12795398,"byte_end":12795409,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1725}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12795616,"byte_end":12795619,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12795547,"byte_end":12795604,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796177,"byte_end":12796184,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12795889,"byte_end":12795952,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12795957,"byte_end":12795975,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12795980,"byte_end":12795983,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12795988,"byte_end":12796063,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796068,"byte_end":12796138,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796143,"byte_end":12796165,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796533,"byte_end":12796540,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796237,"byte_end":12796308,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796313,"byte_end":12796331,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796336,"byte_end":12796339,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796344,"byte_end":12796419,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796424,"byte_end":12796494,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796499,"byte_end":12796521,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796908,"byte_end":12796919,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796605,"byte_end":12796683,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796688,"byte_end":12796706,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796711,"byte_end":12796714,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796719,"byte_end":12796794,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796799,"byte_end":12796869,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12796874,"byte_end":12796896,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797285,"byte_end":12797295,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797015,"byte_end":12797083,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797088,"byte_end":12797091,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797096,"byte_end":12797171,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797176,"byte_end":12797246,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797251,"byte_end":12797273,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797407,"byte_end":12797414,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797345,"byte_end":12797395,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797537,"byte_end":12797548,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797467,"byte_end":12797525,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797669,"byte_end":12797681,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797613,"byte_end":12797657,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797812,"byte_end":12797828,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797748,"byte_end":12797800,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":954},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1239},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1008},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1010},{"krate":0,"index":1017},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799355,"byte_end":12799407,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799408,"byte_end":12799411,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799412,"byte_end":12799482,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799483,"byte_end":12799541,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799542,"byte_end":12799614,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799615,"byte_end":12799685,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799686,"byte_end":12799753,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799754,"byte_end":12799757,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799758,"byte_end":12799779,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799780,"byte_end":12799783,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799784,"byte_end":12799859,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799860,"byte_end":12799931,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12799932,"byte_end":12800003,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800004,"byte_end":12800074,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800075,"byte_end":12800115,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800116,"byte_end":12800119,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800120,"byte_end":12800127,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800128,"byte_end":12800171,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800172,"byte_end":12800230,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800231,"byte_end":12800234,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800235,"byte_end":12800290,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800291,"byte_end":12800333,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800334,"byte_end":12800339,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800340,"byte_end":12800392,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800393,"byte_end":12800398,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800399,"byte_end":12800421,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800422,"byte_end":12800429,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800430,"byte_end":12800433,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800434,"byte_end":12800506,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800507,"byte_end":12800578,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800579,"byte_end":12800598,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800599,"byte_end":12800602,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800603,"byte_end":12800614,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800615,"byte_end":12800664,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800665,"byte_end":12800714,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800715,"byte_end":12800764,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800765,"byte_end":12800772,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800773,"byte_end":12800776,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800777,"byte_end":12800815,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800816,"byte_end":12800819,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800820,"byte_end":12800827,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800828,"byte_end":12800871,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800872,"byte_end":12800930,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800931,"byte_end":12800934,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800935,"byte_end":12800960,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800961,"byte_end":12800982,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800983,"byte_end":12800986,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12800987,"byte_end":12801063,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801064,"byte_end":12801073,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801074,"byte_end":12801116,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801117,"byte_end":12801122,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801123,"byte_end":12801196,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801197,"byte_end":12801244,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801245,"byte_end":12801248,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801249,"byte_end":12801286,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801287,"byte_end":12801301,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801302,"byte_end":12801307,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801308,"byte_end":12801315,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801316,"byte_end":12801319,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801320,"byte_end":12801362,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801363,"byte_end":12801366,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801367,"byte_end":12801378,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801379,"byte_end":12801418,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801419,"byte_end":12801458,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801459,"byte_end":12801498,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801499,"byte_end":12801506,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801507,"byte_end":12801510,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801511,"byte_end":12801525,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801526,"byte_end":12801529,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801530,"byte_end":12801605,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801606,"byte_end":12801679,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801680,"byte_end":12801746,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801747,"byte_end":12801816,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801817,"byte_end":12801882,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801883,"byte_end":12801886,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801887,"byte_end":12801903,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801904,"byte_end":12801907,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801908,"byte_end":12801984,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12801985,"byte_end":12802026,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802027,"byte_end":12802030,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802031,"byte_end":12802038,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802039,"byte_end":12802070,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802071,"byte_end":12802121,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802122,"byte_end":12802163,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802164,"byte_end":12802199,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802200,"byte_end":12802248,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802249,"byte_end":12802280,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802281,"byte_end":12802329,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802330,"byte_end":12802379,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802380,"byte_end":12802402,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802403,"byte_end":12802410,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802411,"byte_end":12802433,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802434,"byte_end":12802441,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802442,"byte_end":12802445,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802446,"byte_end":12802494,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802495,"byte_end":12802498,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802499,"byte_end":12802510,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802511,"byte_end":12802563,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802564,"byte_end":12802629,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802630,"byte_end":12802695,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802696,"byte_end":12802761,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802762,"byte_end":12802769,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802770,"byte_end":12802773,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802774,"byte_end":12802850,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802851,"byte_end":12802925,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802926,"byte_end":12802998,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12802999,"byte_end":12803075,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803076,"byte_end":12803118,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803119,"byte_end":12803122,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803123,"byte_end":12803139,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803140,"byte_end":12803143,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803144,"byte_end":12803219,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803220,"byte_end":12803261,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803262,"byte_end":12803265,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803266,"byte_end":12803273,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803274,"byte_end":12803305,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803306,"byte_end":12803356,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803357,"byte_end":12803398,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803399,"byte_end":12803434,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803435,"byte_end":12803483,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803484,"byte_end":12803515,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803516,"byte_end":12803564,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803565,"byte_end":12803624,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803625,"byte_end":12803647,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803648,"byte_end":12803655,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803656,"byte_end":12803678,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803679,"byte_end":12803686,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803687,"byte_end":12803690,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803691,"byte_end":12803739,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803740,"byte_end":12803743,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803744,"byte_end":12803755,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803756,"byte_end":12803805,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803806,"byte_end":12803860,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803861,"byte_end":12803915,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803916,"byte_end":12803970,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803971,"byte_end":12803978,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803979,"byte_end":12803982,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12803983,"byte_end":12804056,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804057,"byte_end":12804124,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804125,"byte_end":12804128,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804129,"byte_end":12804145,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804146,"byte_end":12804149,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804150,"byte_end":12804226,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804227,"byte_end":12804299,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804300,"byte_end":12804339,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804340,"byte_end":12804343,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804344,"byte_end":12804351,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804352,"byte_end":12804383,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804384,"byte_end":12804434,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804435,"byte_end":12804476,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804477,"byte_end":12804512,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804513,"byte_end":12804561,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804562,"byte_end":12804593,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804594,"byte_end":12804641,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804642,"byte_end":12804662,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804663,"byte_end":12804685,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804686,"byte_end":12804693,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804694,"byte_end":12804716,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804717,"byte_end":12804724,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804725,"byte_end":12804728,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804729,"byte_end":12804777,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804778,"byte_end":12804781,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804782,"byte_end":12804793,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804794,"byte_end":12804846,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804847,"byte_end":12804912,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804913,"byte_end":12804978,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12804979,"byte_end":12805044,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805045,"byte_end":12805052,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805053,"byte_end":12805056,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805057,"byte_end":12805129,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805130,"byte_end":12805205,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805206,"byte_end":12805278,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805279,"byte_end":12805355,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805356,"byte_end":12805429,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805430,"byte_end":12805433,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805434,"byte_end":12805450,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805451,"byte_end":12805454,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805455,"byte_end":12805529,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805530,"byte_end":12805597,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805598,"byte_end":12805601,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805602,"byte_end":12805609,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805610,"byte_end":12805641,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805642,"byte_end":12805692,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805693,"byte_end":12805734,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805735,"byte_end":12805770,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805771,"byte_end":12805819,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805820,"byte_end":12805851,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805852,"byte_end":12805900,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805901,"byte_end":12805921,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805922,"byte_end":12805944,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805945,"byte_end":12805952,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805953,"byte_end":12805975,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805976,"byte_end":12805983,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805984,"byte_end":12805987,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12805988,"byte_end":12806036,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806037,"byte_end":12806040,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806041,"byte_end":12806052,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806053,"byte_end":12806079,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806080,"byte_end":12806125,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806126,"byte_end":12806171,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806172,"byte_end":12806217,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806218,"byte_end":12806221,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806222,"byte_end":12806250,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806251,"byte_end":12806296,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806297,"byte_end":12806342,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806343,"byte_end":12806388,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806389,"byte_end":12806396,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806397,"byte_end":12806400,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806401,"byte_end":12806473,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806474,"byte_end":12806550,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806551,"byte_end":12806621,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806622,"byte_end":12806691,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806692,"byte_end":12806729,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806730,"byte_end":12806733,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806734,"byte_end":12806808,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806809,"byte_end":12806863,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806864,"byte_end":12806867,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806868,"byte_end":12806884,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806885,"byte_end":12806888,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806889,"byte_end":12806962,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12806963,"byte_end":12807039,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807040,"byte_end":12807114,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807115,"byte_end":12807128,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807129,"byte_end":12807132,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807133,"byte_end":12807140,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807141,"byte_end":12807172,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807173,"byte_end":12807223,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807224,"byte_end":12807265,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807266,"byte_end":12807301,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807302,"byte_end":12807351,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807352,"byte_end":12807383,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807384,"byte_end":12807432,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807433,"byte_end":12807477,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807478,"byte_end":12807500,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807501,"byte_end":12807508,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807509,"byte_end":12807531,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807532,"byte_end":12807539,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807540,"byte_end":12807543,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807544,"byte_end":12807592,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807593,"byte_end":12807596,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807597,"byte_end":12807608,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807609,"byte_end":12807635,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807636,"byte_end":12807686,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807687,"byte_end":12807737,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807738,"byte_end":12807788,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807789,"byte_end":12807792,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807793,"byte_end":12807813,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807814,"byte_end":12807844,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807845,"byte_end":12807875,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807876,"byte_end":12807906,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807907,"byte_end":12807914,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807915,"byte_end":12807918,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807919,"byte_end":12807992,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12807993,"byte_end":12808068,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808069,"byte_end":12808141,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808142,"byte_end":12808180,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808181,"byte_end":12808184,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808185,"byte_end":12808259,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808260,"byte_end":12808336,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808337,"byte_end":12808410,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808411,"byte_end":12808439,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808440,"byte_end":12808443,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808444,"byte_end":12808460,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808461,"byte_end":12808464,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808465,"byte_end":12808538,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808539,"byte_end":12808615,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808616,"byte_end":12808690,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808691,"byte_end":12808763,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808764,"byte_end":12808775,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808776,"byte_end":12808779,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808780,"byte_end":12808787,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808788,"byte_end":12808819,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808820,"byte_end":12808870,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808871,"byte_end":12808912,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808913,"byte_end":12808948,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808949,"byte_end":12808998,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12808999,"byte_end":12809030,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809031,"byte_end":12809096,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809097,"byte_end":12809117,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809118,"byte_end":12809140,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809141,"byte_end":12809148,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809149,"byte_end":12809156,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809157,"byte_end":12809160,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809161,"byte_end":12809209,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809210,"byte_end":12809213,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809214,"byte_end":12809225,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809226,"byte_end":12809252,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809253,"byte_end":12809303,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809304,"byte_end":12809354,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809355,"byte_end":12809405,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809406,"byte_end":12809409,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809410,"byte_end":12809430,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809431,"byte_end":12809461,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809462,"byte_end":12809492,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809493,"byte_end":12809523,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809524,"byte_end":12809531,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809532,"byte_end":12809535,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809536,"byte_end":12809609,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809610,"byte_end":12809684,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809685,"byte_end":12809759,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809760,"byte_end":12809833,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809834,"byte_end":12809910,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809911,"byte_end":12809944,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809945,"byte_end":12809948,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809949,"byte_end":12809965,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809966,"byte_end":12809969,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12809970,"byte_end":12810044,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810045,"byte_end":12810112,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810113,"byte_end":12810116,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810117,"byte_end":12810124,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810125,"byte_end":12810156,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810157,"byte_end":12810207,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810208,"byte_end":12810249,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810250,"byte_end":12810285,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810286,"byte_end":12810334,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810335,"byte_end":12810366,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810367,"byte_end":12810414,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810415,"byte_end":12810461,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810462,"byte_end":12810484,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810485,"byte_end":12810492,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810493,"byte_end":12810515,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810516,"byte_end":12810523,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810524,"byte_end":12810527,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810528,"byte_end":12810576,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810577,"byte_end":12810580,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810581,"byte_end":12810592,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810593,"byte_end":12810649,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810650,"byte_end":12810711,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810712,"byte_end":12810773,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810774,"byte_end":12810835,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810836,"byte_end":12810843,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810844,"byte_end":12810847,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810848,"byte_end":12810922,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810923,"byte_end":12810943,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810944,"byte_end":12810947,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810948,"byte_end":12810962,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810963,"byte_end":12810966,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12810967,"byte_end":12811042,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811043,"byte_end":12811115,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811116,"byte_end":12811184,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811185,"byte_end":12811261,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811262,"byte_end":12811303,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811304,"byte_end":12811307,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811308,"byte_end":12811378,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811379,"byte_end":12811397,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811398,"byte_end":12811401,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811402,"byte_end":12811409,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811410,"byte_end":12811442,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811443,"byte_end":12811493,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811494,"byte_end":12811538,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811539,"byte_end":12811552,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811553,"byte_end":12811588,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811589,"byte_end":12811620,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811621,"byte_end":12811644,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811645,"byte_end":12811652,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811653,"byte_end":12811675,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811676,"byte_end":12811683,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811684,"byte_end":12811687,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811688,"byte_end":12811738,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811739,"byte_end":12811742,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811743,"byte_end":12811754,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811755,"byte_end":12811788,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811789,"byte_end":12811822,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811823,"byte_end":12811856,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811857,"byte_end":12811864,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811865,"byte_end":12811868,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811869,"byte_end":12811938,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811939,"byte_end":12811976,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12811977,"byte_end":12812016,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12812017,"byte_end":12812062,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12812063,"byte_end":12812110,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12812111,"byte_end":12812141,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12812142,"byte_end":12812175,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12812737,"byte_end":12812744,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12812419,"byte_end":12812474,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12812475,"byte_end":12812478,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12812479,"byte_end":12812554,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12812555,"byte_end":12812635,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12812636,"byte_end":12812695,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12813415,"byte_end":12813440,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1009}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12813330,"byte_end":12813403,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12813792,"byte_end":12813812,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12813461,"byte_end":12813535,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12813536,"byte_end":12813539,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12813540,"byte_end":12813619,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12813620,"byte_end":12813663,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12813664,"byte_end":12813667,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12813668,"byte_end":12813721,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12813722,"byte_end":12813725,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12813726,"byte_end":12813756,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814156,"byte_end":12814159,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814065,"byte_end":12814144,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814386,"byte_end":12814393,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814283,"byte_end":12814358,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814363,"byte_end":12814374,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814615,"byte_end":12814631,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814443,"byte_end":12814484,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814489,"byte_end":12814492,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814497,"byte_end":12814570,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814575,"byte_end":12814603,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12815052,"byte_end":12815072,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814696,"byte_end":12814730,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814735,"byte_end":12814738,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814743,"byte_end":12814813,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814818,"byte_end":12814893,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814898,"byte_end":12814970,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814975,"byte_end":12815040,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820328,"byte_end":12820331,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819786,"byte_end":12819861,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819866,"byte_end":12819877,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819882,"byte_end":12819885,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819890,"byte_end":12819904,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819909,"byte_end":12819912,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819917,"byte_end":12819924,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819929,"byte_end":12819960,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819965,"byte_end":12820013,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820018,"byte_end":12820021,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820026,"byte_end":12820067,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820072,"byte_end":12820107,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820112,"byte_end":12820143,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820148,"byte_end":12820179,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820184,"byte_end":12820213,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820218,"byte_end":12820238,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820243,"byte_end":12820265,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820270,"byte_end":12820277,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820282,"byte_end":12820304,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820309,"byte_end":12820316,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821516,"byte_end":12821526,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12820995,"byte_end":12821044,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821049,"byte_end":12821052,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821057,"byte_end":12821089,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821094,"byte_end":12821097,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821102,"byte_end":12821170,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821175,"byte_end":12821178,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821183,"byte_end":12821197,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821202,"byte_end":12821205,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821210,"byte_end":12821217,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821222,"byte_end":12821253,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821258,"byte_end":12821306,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821311,"byte_end":12821314,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821319,"byte_end":12821360,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821365,"byte_end":12821400,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821405,"byte_end":12821426,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821431,"byte_end":12821453,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821458,"byte_end":12821465,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821470,"byte_end":12821492,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821497,"byte_end":12821504,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822158,"byte_end":12822171,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821625,"byte_end":12821677,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821682,"byte_end":12821685,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821690,"byte_end":12821728,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821733,"byte_end":12821736,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821741,"byte_end":12821809,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821814,"byte_end":12821817,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821822,"byte_end":12821836,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821841,"byte_end":12821844,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821849,"byte_end":12821856,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821861,"byte_end":12821892,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821897,"byte_end":12821945,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821950,"byte_end":12821953,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12821958,"byte_end":12821999,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822004,"byte_end":12822039,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822044,"byte_end":12822068,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822073,"byte_end":12822095,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822100,"byte_end":12822107,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822112,"byte_end":12822134,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822139,"byte_end":12822146,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822804,"byte_end":12822817,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822271,"byte_end":12822323,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822328,"byte_end":12822331,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822336,"byte_end":12822374,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822379,"byte_end":12822382,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822387,"byte_end":12822455,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822460,"byte_end":12822463,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822468,"byte_end":12822482,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822487,"byte_end":12822490,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822495,"byte_end":12822502,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822507,"byte_end":12822538,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822543,"byte_end":12822591,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822596,"byte_end":12822599,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822604,"byte_end":12822645,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822650,"byte_end":12822685,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822690,"byte_end":12822714,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822719,"byte_end":12822741,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822746,"byte_end":12822753,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822758,"byte_end":12822780,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822785,"byte_end":12822792,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823898,"byte_end":12823914,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12822986,"byte_end":12823015,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823020,"byte_end":12823023,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823028,"byte_end":12823100,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823105,"byte_end":12823130,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823135,"byte_end":12823138,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823143,"byte_end":12823215,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823220,"byte_end":12823289,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823294,"byte_end":12823367,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823372,"byte_end":12823384,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823389,"byte_end":12823392,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823397,"byte_end":12823472,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823477,"byte_end":12823538,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823543,"byte_end":12823546,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823551,"byte_end":12823565,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823570,"byte_end":12823573,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823578,"byte_end":12823585,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823590,"byte_end":12823621,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823626,"byte_end":12823674,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823679,"byte_end":12823682,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823687,"byte_end":12823728,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823733,"byte_end":12823768,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823773,"byte_end":12823808,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823813,"byte_end":12823835,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823840,"byte_end":12823847,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823852,"byte_end":12823874,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12823879,"byte_end":12823886,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824575,"byte_end":12824594,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824011,"byte_end":12824074,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824079,"byte_end":12824082,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824087,"byte_end":12824138,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824143,"byte_end":12824146,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824151,"byte_end":12824219,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824224,"byte_end":12824227,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824232,"byte_end":12824246,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824251,"byte_end":12824254,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824259,"byte_end":12824266,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824271,"byte_end":12824302,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824307,"byte_end":12824355,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824360,"byte_end":12824363,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824368,"byte_end":12824409,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824414,"byte_end":12824449,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824454,"byte_end":12824485,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824490,"byte_end":12824512,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824517,"byte_end":12824524,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824529,"byte_end":12824551,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824556,"byte_end":12824563,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825253,"byte_end":12825272,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824763,"byte_end":12824829,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824834,"byte_end":12824837,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824842,"byte_end":12824897,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824902,"byte_end":12824905,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824910,"byte_end":12824924,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824929,"byte_end":12824932,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824937,"byte_end":12824944,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824949,"byte_end":12824980,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12824985,"byte_end":12825033,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825038,"byte_end":12825041,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825046,"byte_end":12825087,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825092,"byte_end":12825127,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825132,"byte_end":12825163,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825168,"byte_end":12825190,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825195,"byte_end":12825202,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825207,"byte_end":12825229,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825234,"byte_end":12825241,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825826,"byte_end":12825843,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825375,"byte_end":12825448,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825453,"byte_end":12825471,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825476,"byte_end":12825479,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825484,"byte_end":12825498,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825503,"byte_end":12825506,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825511,"byte_end":12825518,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825523,"byte_end":12825554,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825559,"byte_end":12825607,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825612,"byte_end":12825615,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825620,"byte_end":12825661,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825666,"byte_end":12825701,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825706,"byte_end":12825736,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825741,"byte_end":12825763,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825768,"byte_end":12825775,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825780,"byte_end":12825802,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825807,"byte_end":12825814,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826493,"byte_end":12826501,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12825944,"byte_end":12826007,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826012,"byte_end":12826015,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826020,"byte_end":12826081,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826086,"byte_end":12826089,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826094,"byte_end":12826148,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826153,"byte_end":12826156,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826161,"byte_end":12826175,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826180,"byte_end":12826183,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826188,"byte_end":12826195,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826200,"byte_end":12826231,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826236,"byte_end":12826284,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826289,"byte_end":12826292,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826297,"byte_end":12826338,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826343,"byte_end":12826378,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826383,"byte_end":12826403,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826408,"byte_end":12826430,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826435,"byte_end":12826442,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826447,"byte_end":12826469,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826474,"byte_end":12826481,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827021,"byte_end":12827030,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826599,"byte_end":12826662,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826667,"byte_end":12826670,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826675,"byte_end":12826689,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826694,"byte_end":12826697,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826702,"byte_end":12826709,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826714,"byte_end":12826762,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826767,"byte_end":12826788,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826793,"byte_end":12826828,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826833,"byte_end":12826864,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826869,"byte_end":12826900,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826905,"byte_end":12826934,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826939,"byte_end":12826959,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826964,"byte_end":12826985,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12826990,"byte_end":12826997,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827002,"byte_end":12827009,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827686,"byte_end":12827694,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827182,"byte_end":12827235,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827240,"byte_end":12827243,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827248,"byte_end":12827262,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827267,"byte_end":12827270,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827275,"byte_end":12827282,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827287,"byte_end":12827318,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827323,"byte_end":12827371,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827376,"byte_end":12827379,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827384,"byte_end":12827425,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827430,"byte_end":12827465,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827470,"byte_end":12827501,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827506,"byte_end":12827537,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827542,"byte_end":12827571,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827576,"byte_end":12827596,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827601,"byte_end":12827623,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827628,"byte_end":12827635,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827640,"byte_end":12827662,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827667,"byte_end":12827674,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828267,"byte_end":12828276,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827858,"byte_end":12827912,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827917,"byte_end":12827920,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827925,"byte_end":12827939,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827944,"byte_end":12827947,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827952,"byte_end":12827959,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12827964,"byte_end":12827996,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828001,"byte_end":12828051,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828056,"byte_end":12828100,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828105,"byte_end":12828140,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828145,"byte_end":12828176,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828181,"byte_end":12828204,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828209,"byte_end":12828216,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828221,"byte_end":12828243,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828248,"byte_end":12828255,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828885,"byte_end":12828895,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828437,"byte_end":12828486,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828491,"byte_end":12828494,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828499,"byte_end":12828513,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828518,"byte_end":12828521,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828526,"byte_end":12828533,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828538,"byte_end":12828583,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828588,"byte_end":12828638,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828643,"byte_end":12828699,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828704,"byte_end":12828717,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828722,"byte_end":12828757,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828762,"byte_end":12828793,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828798,"byte_end":12828822,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828827,"byte_end":12828834,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828839,"byte_end":12828861,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12828866,"byte_end":12828873,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12830274,"byte_end":12830284,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12830031,"byte_end":12830118,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12830119,"byte_end":12830122,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12830123,"byte_end":12830161,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12830162,"byte_end":12830200,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831384,"byte_end":12831387,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12830965,"byte_end":12831025,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831030,"byte_end":12831033,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831038,"byte_end":12831048,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831053,"byte_end":12831056,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831061,"byte_end":12831133,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831138,"byte_end":12831211,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831216,"byte_end":12831283,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831288,"byte_end":12831291,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831296,"byte_end":12831372,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832518,"byte_end":12832537,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831545,"byte_end":12831605,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831610,"byte_end":12831613,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831618,"byte_end":12831681,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831686,"byte_end":12831764,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831769,"byte_end":12831836,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831841,"byte_end":12831913,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831918,"byte_end":12831988,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12831993,"byte_end":12832016,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832021,"byte_end":12832024,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832029,"byte_end":12832039,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832044,"byte_end":12832047,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832052,"byte_end":12832127,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832132,"byte_end":12832205,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832210,"byte_end":12832286,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832291,"byte_end":12832364,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832369,"byte_end":12832439,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832444,"byte_end":12832447,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832452,"byte_end":12832506,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12833103,"byte_end":12833113,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832665,"byte_end":12832715,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832720,"byte_end":12832723,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832728,"byte_end":12832735,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832740,"byte_end":12832759,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832764,"byte_end":12832802,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832807,"byte_end":12832810,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832815,"byte_end":12832849,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832854,"byte_end":12832901,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832906,"byte_end":12832913,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832918,"byte_end":12832925,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832930,"byte_end":12832968,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832973,"byte_end":12832976,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12832981,"byte_end":12833034,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12833039,"byte_end":12833079,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12833084,"byte_end":12833091,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837439,"byte_end":12837460,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837393,"byte_end":12837434,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837496,"byte_end":12837498,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837466,"byte_end":12837491,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837371,"byte_end":12837386,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1294}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837288,"byte_end":12837344,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12839420,"byte_end":12839437,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838234,"byte_end":12838375,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838376,"byte_end":12838379,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838380,"byte_end":12838418,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838419,"byte_end":12838457,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838458,"byte_end":12838461,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838462,"byte_end":12838475,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838476,"byte_end":12838543,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838544,"byte_end":12838547,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838548,"byte_end":12838581,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838582,"byte_end":12838611,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838612,"byte_end":12838615,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838616,"byte_end":12838623,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838624,"byte_end":12838680,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838681,"byte_end":12838715,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838716,"byte_end":12838719,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838720,"byte_end":12838725,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838726,"byte_end":12838773,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838774,"byte_end":12838827,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838828,"byte_end":12838905,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838906,"byte_end":12838941,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838942,"byte_end":12838963,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12838964,"byte_end":12839014,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12839015,"byte_end":12839078,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12839079,"byte_end":12839142,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12839143,"byte_end":12839206,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12839207,"byte_end":12839263,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12839264,"byte_end":12839313,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12839314,"byte_end":12839326,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12839327,"byte_end":12839334,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12839335,"byte_end":12839342,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12839343,"byte_end":12839346,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840772,"byte_end":12840775,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840330,"byte_end":12840398,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840403,"byte_end":12840406,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840411,"byte_end":12840421,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840426,"byte_end":12840429,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840434,"byte_end":12840513,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840518,"byte_end":12840592,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840597,"byte_end":12840664,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840669,"byte_end":12840672,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840677,"byte_end":12840760,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842086,"byte_end":12842105,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841055,"byte_end":12841123,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841128,"byte_end":12841131,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841136,"byte_end":12841206,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841211,"byte_end":12841297,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841302,"byte_end":12841372,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841377,"byte_end":12841454,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841459,"byte_end":12841529,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841534,"byte_end":12841557,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841562,"byte_end":12841565,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841570,"byte_end":12841580,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841585,"byte_end":12841588,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841593,"byte_end":12841675,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841680,"byte_end":12841753,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841758,"byte_end":12841835,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841840,"byte_end":12841913,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841918,"byte_end":12841993,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12841998,"byte_end":12842001,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842006,"byte_end":12842074,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842893,"byte_end":12842903,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842362,"byte_end":12842413,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842418,"byte_end":12842421,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842426,"byte_end":12842433,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842438,"byte_end":12842457,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842462,"byte_end":12842507,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842512,"byte_end":12842515,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842520,"byte_end":12842592,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842597,"byte_end":12842644,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842649,"byte_end":12842656,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842661,"byte_end":12842668,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842673,"byte_end":12842718,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842723,"byte_end":12842726,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842731,"byte_end":12842824,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842829,"byte_end":12842869,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842874,"byte_end":12842881,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12846999,"byte_end":12847021,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12846952,"byte_end":12846994,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12847057,"byte_end":12847059,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12847027,"byte_end":12847052,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12846923,"byte_end":12846945,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1326}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12846839,"byte_end":12846896,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1414},{"krate":0,"index":1536},{"krate":0,"index":1539},{"krate":0,"index":1544}],"decl_id":null,"docs":" Additional utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/cfg.rs","byte_start":6728,"byte_end":6752,"line_start":66,"line_end":66,"column_start":13,"column_end":37}},{"value":"/ Additional utilities for tracking time.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":12847628,"byte_end":12847671,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":12847672,"byte_end":12847675,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides additional utilities for executing code after a set period","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":12847676,"byte_end":12847759,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/ of time. Currently there is only one:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":12847760,"byte_end":12847801,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":12847802,"byte_end":12847805,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":12847806,"byte_end":12847883,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":12847884,"byte_end":12847902,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":12847903,"byte_end":12847906,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type must be used from within the context of the `Runtime`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":12847907,"byte_end":12847975,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/stack.rs","byte_start":12864976,"byte_end":12864981,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/stack.rs","byte_start":12864926,"byte_end":12864966,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/stack.rs","byte_start":12865039,"byte_end":12865047,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/stack.rs","byte_start":12865012,"byte_end":12865029,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/stack.rs","byte_start":12865136,"byte_end":12865141,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/stack.rs","byte_start":12865054,"byte_end":12865126,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":1463},{"krate":0,"index":1568},{"krate":0,"index":1577},{"krate":0,"index":1580},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1609},{"krate":0,"index":1612},{"krate":0,"index":1619},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1510},{"krate":0,"index":1514},{"krate":0,"index":1524},{"krate":0,"index":1527},{"krate":0,"index":1529}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12865576,"byte_end":12865608,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12865609,"byte_end":12865612,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12865613,"byte_end":12865653,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12865654,"byte_end":12865657,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12865658,"byte_end":12865695,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12870114,"byte_end":12870124,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12865976,"byte_end":12866008,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866009,"byte_end":12866012,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866013,"byte_end":12866090,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866091,"byte_end":12866131,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866132,"byte_end":12866135,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866136,"byte_end":12866147,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866148,"byte_end":12866151,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866152,"byte_end":12866219,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866220,"byte_end":12866300,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866301,"byte_end":12866379,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866380,"byte_end":12866416,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866417,"byte_end":12866420,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866421,"byte_end":12866491,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll_expired`] is called. If an entry has reached its","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866492,"byte_end":12866578,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` is returned indicating that the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866579,"byte_end":12866664,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866665,"byte_end":12866734,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866735,"byte_end":12866738,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866739,"byte_end":12866768,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866769,"byte_end":12866772,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`DelayQueue::poll_expired`]. If no delays have","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866773,"byte_end":12866863,"line_start":38,"line_end":38,"column_start":1,"column_end":91}},{"value":"/ expired, no items are returned. In this case, `Poll::Pending` is returned and the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866864,"byte_end":12866949,"line_start":39,"line_end":39,"column_start":1,"column_end":86}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12866950,"byte_end":12867026,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867027,"byte_end":12867039,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867040,"byte_end":12867043,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867044,"byte_end":12867123,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ returns `Poll::Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867124,"byte_end":12867207,"line_start":44,"line_end":44,"column_start":1,"column_end":84}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867208,"byte_end":12867284,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ returning items or `Poll::Pending`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867285,"byte_end":12867324,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867325,"byte_end":12867328,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867329,"byte_end":12867407,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867408,"byte_end":12867484,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire at the same instant. Also note that delays are","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867485,"byte_end":12867566,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867567,"byte_end":12867606,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867607,"byte_end":12867610,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867611,"byte_end":12867631,"line_start":53,"line_end":53,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867632,"byte_end":12867635,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of a timer wheel similar to that used internally","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867636,"byte_end":12867740,"line_start":55,"line_end":55,"column_start":1,"column_end":105}},{"value":"/ by Tokio's standalone timer utilities such as [`sleep`]. Because of this, it offers the same","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867741,"byte_end":12867837,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867838,"byte_end":12867879,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867880,"byte_end":12867883,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867884,"byte_end":12867984,"line_start":59,"line_end":59,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12867985,"byte_end":12868050,"line_start":60,"line_end":60,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868051,"byte_end":12868054,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868055,"byte_end":12868137,"line_start":62,"line_end":62,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868138,"byte_end":12868165,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868166,"byte_end":12868169,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868170,"byte_end":12868181,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868182,"byte_end":12868185,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868186,"byte_end":12868233,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868234,"byte_end":12868237,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868238,"byte_end":12868256,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::error::Error;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868257,"byte_end":12868291,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ use tokio_util::time::{DelayQueue, delay_queue};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868292,"byte_end":12868344,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868345,"byte_end":12868348,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868349,"byte_end":12868372,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868373,"byte_end":12868407,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868408,"byte_end":12868443,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868444,"byte_end":12868472,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868473,"byte_end":12868502,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868503,"byte_end":12868529,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868530,"byte_end":12868533,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868534,"byte_end":12868552,"line_start":80,"line_end":80,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868553,"byte_end":12868615,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868616,"byte_end":12868658,"line_start":82,"line_end":82,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868659,"byte_end":12868664,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868665,"byte_end":12868668,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868669,"byte_end":12868698,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868699,"byte_end":12868702,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868703,"byte_end":12868719,"line_start":87,"line_end":87,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868720,"byte_end":12868779,"line_start":88,"line_end":88,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868780,"byte_end":12868820,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868821,"byte_end":12868889,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868890,"byte_end":12868893,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868894,"byte_end":12868947,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868948,"byte_end":12868957,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868958,"byte_end":12868961,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12868962,"byte_end":12869019,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869020,"byte_end":12869053,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869054,"byte_end":12869091,"line_start":97,"line_end":97,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869092,"byte_end":12869101,"line_start":98,"line_end":98,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869102,"byte_end":12869105,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869106,"byte_end":12869152,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869153,"byte_end":12869221,"line_start":101,"line_end":101,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869222,"byte_end":12869274,"line_start":102,"line_end":102,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869275,"byte_end":12869288,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869289,"byte_end":12869298,"line_start":104,"line_end":104,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869299,"byte_end":12869302,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869303,"byte_end":12869386,"line_start":106,"line_end":106,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869387,"byte_end":12869464,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869465,"byte_end":12869498,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869499,"byte_end":12869552,"line_start":109,"line_end":109,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869553,"byte_end":12869566,"line_start":110,"line_end":110,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869567,"byte_end":12869570,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869571,"byte_end":12869602,"line_start":112,"line_end":112,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869603,"byte_end":12869612,"line_start":113,"line_end":113,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869613,"byte_end":12869618,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869619,"byte_end":12869626,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869627,"byte_end":12869630,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869631,"byte_end":12869666,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869667,"byte_end":12869708,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869709,"byte_end":12869732,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869733,"byte_end":12869809,"line_start":120,"line_end":120,"column_start":1,"column_end":77}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869810,"byte_end":12869857,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/ [`Stream::poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869858,"byte_end":12869913,"line_start":122,"line_end":122,"column_start":1,"column_end":56}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869914,"byte_end":12869951,"line_start":123,"line_end":123,"column_start":1,"column_end":38}},{"value":"/ [`sleep`]: fn@tokio::time::sleep","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869952,"byte_end":12869988,"line_start":124,"line_end":124,"column_start":1,"column_end":37}},{"value":"/ [`slab`]: slab","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12869989,"byte_end":12870007,"line_start":125,"line_end":125,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12870008,"byte_end":12870047,"line_start":126,"line_end":126,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12870048,"byte_end":12870085,"line_start":127,"line_end":127,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12871100,"byte_end":12871107,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and been removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and been removed.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12870877,"byte_end":12870940,"line_start":155,"line_end":155,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12870941,"byte_end":12870944,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll_expired`].","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12870945,"byte_end":12871001,"line_start":157,"line_end":157,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12871002,"byte_end":12871005,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll_expired`]: method@DelayQueue::poll_expired","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12871006,"byte_end":12871071,"line_start":159,"line_end":159,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12871602,"byte_end":12871605,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":1589}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12871275,"byte_end":12871321,"line_start":172,"line_end":172,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12871322,"byte_end":12871325,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12871326,"byte_end":12871407,"line_start":174,"line_end":174,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12871408,"byte_end":12871443,"line_start":175,"line_end":175,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12871444,"byte_end":12871447,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12871448,"byte_end":12871485,"line_start":177,"line_end":177,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12871486,"byte_end":12871539,"line_start":178,"line_end":178,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872589,"byte_end":12872592,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872283,"byte_end":12872322,"line_start":214,"line_end":214,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872327,"byte_end":12872330,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872335,"byte_end":12872408,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872413,"byte_end":12872416,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872421,"byte_end":12872435,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872440,"byte_end":12872443,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872448,"byte_end":12872459,"line_start":220,"line_end":220,"column_start":5,"column_end":16}},{"value":"/ # use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872464,"byte_end":12872503,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872508,"byte_end":12872565,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872570,"byte_end":12872577,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873487,"byte_end":12873500,"line_start":253,"line_end":253,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872662,"byte_end":12872729,"line_start":228,"line_end":228,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872734,"byte_end":12872737,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872742,"byte_end":12872813,"line_start":230,"line_end":230,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872818,"byte_end":12872887,"line_start":231,"line_end":231,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872892,"byte_end":12872904,"line_start":232,"line_end":232,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872909,"byte_end":12872912,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872917,"byte_end":12872931,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872936,"byte_end":12872939,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872944,"byte_end":12872955,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/ # use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872960,"byte_end":12872999,"line_start":237,"line_end":237,"column_start":5,"column_end":44}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873004,"byte_end":12873034,"line_start":238,"line_end":238,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873039,"byte_end":12873042,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873047,"byte_end":12873067,"line_start":240,"line_end":240,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873072,"byte_end":12873095,"line_start":241,"line_end":241,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873100,"byte_end":12873156,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873161,"byte_end":12873164,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ // These insertions are done without further allocation","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873169,"byte_end":12873228,"line_start":244,"line_end":244,"column_start":5,"column_end":64}},{"value":"/ for i in 0..10 {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873233,"byte_end":12873253,"line_start":245,"line_end":245,"column_start":5,"column_end":25}},{"value":"/     delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873258,"byte_end":12873312,"line_start":246,"line_end":246,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873317,"byte_end":12873322,"line_start":247,"line_end":247,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873327,"byte_end":12873330,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ // This will make the queue allocate additional storage","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873335,"byte_end":12873394,"line_start":249,"line_end":249,"column_start":5,"column_end":64}},{"value":"/ delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873399,"byte_end":12873451,"line_start":250,"line_end":250,"column_start":5,"column_end":57}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873456,"byte_end":12873463,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873468,"byte_end":12873475,"line_start":252,"line_end":252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875588,"byte_end":12875597,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873811,"byte_end":12873884,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873889,"byte_end":12873898,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873903,"byte_end":12873906,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873911,"byte_end":12873985,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12873990,"byte_end":12874010,"line_start":269,"line_end":269,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874015,"byte_end":12874018,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874023,"byte_end":12874098,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874103,"byte_end":12874181,"line_start":272,"line_end":272,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874186,"byte_end":12874250,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874255,"byte_end":12874258,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used as an argument to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874263,"byte_end":12874338,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is a token and is reused once","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874343,"byte_end":12874420,"line_start":276,"line_end":276,"column_start":5,"column_end":82}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874425,"byte_end":12874503,"line_start":277,"line_end":277,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874508,"byte_end":12874581,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874586,"byte_end":12874662,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874667,"byte_end":12874701,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874706,"byte_end":12874709,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874714,"byte_end":12874766,"line_start":282,"line_end":282,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874771,"byte_end":12874774,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874779,"byte_end":12874791,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874796,"byte_end":12874799,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874804,"byte_end":12874864,"line_start":286,"line_end":286,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874869,"byte_end":12874872,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874877,"byte_end":12874891,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874896,"byte_end":12874899,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874904,"byte_end":12874919,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874924,"byte_end":12874927,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874932,"byte_end":12874943,"line_start":292,"line_end":292,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874948,"byte_end":12874989,"line_start":293,"line_end":293,"column_start":5,"column_end":46}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12874994,"byte_end":12875031,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875036,"byte_end":12875039,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875044,"byte_end":12875064,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875069,"byte_end":12875092,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875097,"byte_end":12875141,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert_at(","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875146,"byte_end":12875182,"line_start":299,"line_end":299,"column_start":5,"column_end":41}},{"value":"/     \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875187,"byte_end":12875243,"line_start":300,"line_end":300,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875248,"byte_end":12875251,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875256,"byte_end":12875279,"line_start":302,"line_end":302,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875284,"byte_end":12875324,"line_start":303,"line_end":303,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875329,"byte_end":12875368,"line_start":304,"line_end":304,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875373,"byte_end":12875380,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875385,"byte_end":12875392,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875397,"byte_end":12875400,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875405,"byte_end":12875452,"line_start":308,"line_end":308,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875457,"byte_end":12875492,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875497,"byte_end":12875530,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875535,"byte_end":12875558,"line_start":311,"line_end":311,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12875563,"byte_end":12875576,"line_start":312,"line_end":312,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12877076,"byte_end":12877088,"line_start":357,"line_end":357,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n `None` if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12876866,"byte_end":12876941,"line_start":354,"line_end":354,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12876946,"byte_end":12877022,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ `None` if the queue is exhausted.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12877027,"byte_end":12877064,"line_start":356,"line_end":356,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879770,"byte_end":12879776,"line_start":436,"line_end":436,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12877911,"byte_end":12877988,"line_start":386,"line_end":386,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12877993,"byte_end":12878005,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878010,"byte_end":12878013,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878018,"byte_end":12878087,"line_start":389,"line_end":389,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878092,"byte_end":12878120,"line_start":390,"line_end":390,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878125,"byte_end":12878128,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `timeout` duration has","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878133,"byte_end":12878196,"line_start":392,"line_end":392,"column_start":5,"column_end":68}},{"value":"/ elapsed after `insert` was called. At that point, `value` will","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878201,"byte_end":12878267,"line_start":393,"line_end":393,"column_start":5,"column_end":71}},{"value":"/ be returned from [`poll_expired`]. If `timeout` is a `Duration` of","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878272,"byte_end":12878342,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/ zero, then `value` is immediately made available to poll.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878347,"byte_end":12878408,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878413,"byte_end":12878416,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used as an","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878421,"byte_end":12878484,"line_start":397,"line_end":397,"column_start":5,"column_end":68}},{"value":"/ argument to [`remove`] and [`reset`]. Note that [`Key`] is a","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878489,"byte_end":12878553,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/ token and is reused once `value` is removed from the queue","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878558,"byte_end":12878620,"line_start":399,"line_end":399,"column_start":5,"column_end":67}},{"value":"/ either by calling [`poll_expired`] after `timeout` has elapsed","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878625,"byte_end":12878691,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/ or by calling [`remove`]. At this point, the caller must not","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878696,"byte_end":12878760,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/ use the returned [`Key`] again as it may reference a different","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878765,"byte_end":12878831,"line_start":402,"line_end":402,"column_start":5,"column_end":71}},{"value":"/ item in the queue.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878836,"byte_end":12878858,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878863,"byte_end":12878866,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878871,"byte_end":12878923,"line_start":405,"line_end":405,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878928,"byte_end":12878931,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878936,"byte_end":12878948,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878953,"byte_end":12878956,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12878961,"byte_end":12879026,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/ duration supported by the timer in the current `Runtime`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879031,"byte_end":12879092,"line_start":410,"line_end":410,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879097,"byte_end":12879100,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879105,"byte_end":12879119,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879124,"byte_end":12879127,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879132,"byte_end":12879147,"line_start":414,"line_end":414,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879152,"byte_end":12879155,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879160,"byte_end":12879171,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879176,"byte_end":12879213,"line_start":417,"line_end":417,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879218,"byte_end":12879246,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879251,"byte_end":12879254,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879259,"byte_end":12879279,"line_start":420,"line_end":420,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879284,"byte_end":12879307,"line_start":421,"line_end":421,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879312,"byte_end":12879356,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879361,"byte_end":12879425,"line_start":423,"line_end":423,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879430,"byte_end":12879433,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879438,"byte_end":12879461,"line_start":425,"line_end":425,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879466,"byte_end":12879506,"line_start":426,"line_end":426,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879511,"byte_end":12879550,"line_start":427,"line_end":427,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879555,"byte_end":12879562,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879567,"byte_end":12879574,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879579,"byte_end":12879582,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879587,"byte_end":12879634,"line_start":431,"line_end":431,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879639,"byte_end":12879674,"line_start":432,"line_end":432,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879679,"byte_end":12879712,"line_start":433,"line_end":433,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879717,"byte_end":12879740,"line_start":434,"line_end":434,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12879745,"byte_end":12879758,"line_start":435,"line_end":435,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881849,"byte_end":12881855,"line_start":500,"line_end":500,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881010,"byte_end":12881068,"line_start":472,"line_end":472,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881073,"byte_end":12881076,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881081,"byte_end":12881154,"line_start":474,"line_end":474,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881159,"byte_end":12881232,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881237,"byte_end":12881254,"line_start":476,"line_end":476,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881259,"byte_end":12881262,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881267,"byte_end":12881279,"line_start":478,"line_end":478,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881284,"byte_end":12881287,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881292,"byte_end":12881355,"line_start":480,"line_end":480,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881360,"byte_end":12881363,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881368,"byte_end":12881382,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881387,"byte_end":12881390,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881395,"byte_end":12881410,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881415,"byte_end":12881418,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881423,"byte_end":12881434,"line_start":486,"line_end":486,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881439,"byte_end":12881476,"line_start":487,"line_end":487,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881481,"byte_end":12881509,"line_start":488,"line_end":488,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881514,"byte_end":12881517,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881522,"byte_end":12881542,"line_start":490,"line_end":490,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881547,"byte_end":12881570,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881575,"byte_end":12881619,"line_start":492,"line_end":492,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881624,"byte_end":12881688,"line_start":493,"line_end":493,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881693,"byte_end":12881696,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881701,"byte_end":12881724,"line_start":495,"line_end":495,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881729,"byte_end":12881769,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881774,"byte_end":12881813,"line_start":497,"line_end":497,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881818,"byte_end":12881825,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12881830,"byte_end":12881837,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883720,"byte_end":12883728,"line_start":556,"line_end":556,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12882595,"byte_end":12882668,"line_start":522,"line_end":522,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12882673,"byte_end":12882676,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12882681,"byte_end":12882756,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12882761,"byte_end":12882778,"line_start":525,"line_end":525,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12882783,"byte_end":12882786,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12882791,"byte_end":12882866,"line_start":527,"line_end":527,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12882871,"byte_end":12882947,"line_start":528,"line_end":528,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12882952,"byte_end":12882967,"line_start":529,"line_end":529,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12882972,"byte_end":12882975,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12882980,"byte_end":12882992,"line_start":531,"line_end":531,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12882997,"byte_end":12883000,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883005,"byte_end":12883079,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883084,"byte_end":12883115,"line_start":534,"line_end":534,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883120,"byte_end":12883123,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883128,"byte_end":12883142,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883147,"byte_end":12883150,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883155,"byte_end":12883170,"line_start":538,"line_end":538,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883175,"byte_end":12883178,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883183,"byte_end":12883194,"line_start":540,"line_end":540,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883199,"byte_end":12883240,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883245,"byte_end":12883282,"line_start":542,"line_end":542,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883287,"byte_end":12883290,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883295,"byte_end":12883315,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883320,"byte_end":12883343,"line_start":545,"line_end":545,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883348,"byte_end":12883392,"line_start":546,"line_end":546,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883397,"byte_end":12883461,"line_start":547,"line_end":547,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883466,"byte_end":12883469,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883474,"byte_end":12883527,"line_start":549,"line_end":549,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883532,"byte_end":12883535,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883540,"byte_end":12883613,"line_start":551,"line_end":551,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883618,"byte_end":12883621,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883626,"byte_end":12883684,"line_start":553,"line_end":553,"column_start":5,"column_end":63}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883689,"byte_end":12883696,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12883701,"byte_end":12883708,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885715,"byte_end":12885720,"line_start":616,"line_end":616,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12884580,"byte_end":12884648,"line_start":581,"line_end":581,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12884653,"byte_end":12884667,"line_start":582,"line_end":582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12884672,"byte_end":12884675,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12884680,"byte_end":12884755,"line_start":584,"line_end":584,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12884760,"byte_end":12884780,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12884785,"byte_end":12884788,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12884793,"byte_end":12884863,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12884868,"byte_end":12884938,"line_start":588,"line_end":588,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12884943,"byte_end":12884971,"line_start":589,"line_end":589,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12884976,"byte_end":12884979,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12884984,"byte_end":12884996,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885001,"byte_end":12885004,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885009,"byte_end":12885084,"line_start":593,"line_end":593,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885089,"byte_end":12885144,"line_start":594,"line_end":594,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885149,"byte_end":12885152,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885157,"byte_end":12885171,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885176,"byte_end":12885179,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885184,"byte_end":12885199,"line_start":598,"line_end":598,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885204,"byte_end":12885207,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885212,"byte_end":12885223,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885228,"byte_end":12885265,"line_start":601,"line_end":601,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885270,"byte_end":12885298,"line_start":602,"line_end":602,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885303,"byte_end":12885306,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885311,"byte_end":12885331,"line_start":604,"line_end":604,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885336,"byte_end":12885359,"line_start":605,"line_end":605,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885364,"byte_end":12885408,"line_start":606,"line_end":606,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885413,"byte_end":12885477,"line_start":607,"line_end":607,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885482,"byte_end":12885485,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885490,"byte_end":12885543,"line_start":609,"line_end":609,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885548,"byte_end":12885551,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885556,"byte_end":12885609,"line_start":611,"line_end":611,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885614,"byte_end":12885617,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885622,"byte_end":12885679,"line_start":613,"line_end":613,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885684,"byte_end":12885691,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885696,"byte_end":12885703,"line_start":615,"line_end":615,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886571,"byte_end":12886576,"line_start":647,"line_end":647,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885829,"byte_end":12885870,"line_start":620,"line_end":620,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885875,"byte_end":12885878,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll_expired`] will return `Ok(Ready(None))`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885883,"byte_end":12885957,"line_start":622,"line_end":622,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885962,"byte_end":12885965,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12885970,"byte_end":12886036,"line_start":624,"line_end":624,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886041,"byte_end":12886044,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886049,"byte_end":12886096,"line_start":626,"line_end":626,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886101,"byte_end":12886104,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886109,"byte_end":12886123,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886128,"byte_end":12886131,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886136,"byte_end":12886147,"line_start":630,"line_end":630,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886152,"byte_end":12886189,"line_start":631,"line_end":631,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886194,"byte_end":12886222,"line_start":632,"line_end":632,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886227,"byte_end":12886230,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886235,"byte_end":12886255,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886260,"byte_end":12886283,"line_start":635,"line_end":635,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886288,"byte_end":12886332,"line_start":636,"line_end":636,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886337,"byte_end":12886340,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886345,"byte_end":12886399,"line_start":638,"line_end":638,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886404,"byte_end":12886407,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886412,"byte_end":12886449,"line_start":640,"line_end":640,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886454,"byte_end":12886457,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ delay_queue.clear();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886462,"byte_end":12886486,"line_start":642,"line_end":642,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886491,"byte_end":12886494,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ assert!(delay_queue.is_empty());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886499,"byte_end":12886535,"line_start":644,"line_end":644,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886540,"byte_end":12886547,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886552,"byte_end":12886559,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887053,"byte_end":12887061,"line_start":664,"line_end":664,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886731,"byte_end":12886806,"line_start":654,"line_end":654,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886811,"byte_end":12886814,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886819,"byte_end":12886833,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886838,"byte_end":12886841,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886846,"byte_end":12886857,"line_start":658,"line_end":658,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886862,"byte_end":12886899,"line_start":659,"line_end":659,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886904,"byte_end":12886907,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886912,"byte_end":12886981,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12886986,"byte_end":12887029,"line_start":662,"line_end":662,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887034,"byte_end":12887041,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887618,"byte_end":12887621,"line_start":684,"line_end":684,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887120,"byte_end":12887178,"line_start":668,"line_end":668,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887183,"byte_end":12887186,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887191,"byte_end":12887205,"line_start":670,"line_end":670,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887210,"byte_end":12887213,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887218,"byte_end":12887229,"line_start":672,"line_end":672,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887234,"byte_end":12887271,"line_start":673,"line_end":673,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887276,"byte_end":12887304,"line_start":674,"line_end":674,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887309,"byte_end":12887312,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887317,"byte_end":12887337,"line_start":676,"line_end":676,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887342,"byte_end":12887365,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887370,"byte_end":12887443,"line_start":678,"line_end":678,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887448,"byte_end":12887485,"line_start":679,"line_end":679,"column_start":5,"column_end":42}},{"value":"/ delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887490,"byte_end":12887540,"line_start":680,"line_end":680,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887545,"byte_end":12887582,"line_start":681,"line_end":681,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887587,"byte_end":12887594,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887599,"byte_end":12887606,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888819,"byte_end":12888826,"line_start":721,"line_end":721,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887675,"byte_end":12887746,"line_start":688,"line_end":688,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887751,"byte_end":12887774,"line_start":689,"line_end":689,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887779,"byte_end":12887782,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887787,"byte_end":12887862,"line_start":691,"line_end":691,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887867,"byte_end":12887943,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12887948,"byte_end":12888024,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888029,"byte_end":12888105,"line_start":694,"line_end":694,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888110,"byte_end":12888133,"line_start":695,"line_end":695,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888138,"byte_end":12888141,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888146,"byte_end":12888218,"line_start":697,"line_end":697,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888223,"byte_end":12888256,"line_start":698,"line_end":698,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888261,"byte_end":12888264,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888269,"byte_end":12888281,"line_start":700,"line_end":700,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888286,"byte_end":12888289,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888294,"byte_end":12888366,"line_start":702,"line_end":702,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888371,"byte_end":12888393,"line_start":703,"line_end":703,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888398,"byte_end":12888401,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888406,"byte_end":12888420,"line_start":705,"line_end":705,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888425,"byte_end":12888428,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888433,"byte_end":12888440,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888445,"byte_end":12888482,"line_start":708,"line_end":708,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888487,"byte_end":12888515,"line_start":709,"line_end":709,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888520,"byte_end":12888523,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888528,"byte_end":12888548,"line_start":711,"line_end":711,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888553,"byte_end":12888576,"line_start":712,"line_end":712,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888581,"byte_end":12888625,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888630,"byte_end":12888633,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888638,"byte_end":12888695,"line_start":715,"line_end":715,"column_start":5,"column_end":62}},{"value":"/ delay_queue.reserve(10);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888700,"byte_end":12888728,"line_start":716,"line_end":716,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888733,"byte_end":12888736,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888741,"byte_end":12888783,"line_start":718,"line_end":718,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888788,"byte_end":12888795,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888800,"byte_end":12888807,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889536,"byte_end":12889544,"line_start":745,"line_end":745,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888909,"byte_end":12888963,"line_start":725,"line_end":725,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888968,"byte_end":12888971,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12888976,"byte_end":12889050,"line_start":727,"line_end":727,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `Poll::Pending`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889055,"byte_end":12889116,"line_start":728,"line_end":728,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889121,"byte_end":12889124,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889129,"byte_end":12889143,"line_start":730,"line_end":730,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889148,"byte_end":12889151,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889156,"byte_end":12889163,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889168,"byte_end":12889205,"line_start":733,"line_end":733,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889210,"byte_end":12889238,"line_start":734,"line_end":734,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889243,"byte_end":12889246,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889251,"byte_end":12889271,"line_start":736,"line_end":736,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889276,"byte_end":12889299,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889304,"byte_end":12889348,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/ assert!(delay_queue.is_empty());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889353,"byte_end":12889389,"line_start":739,"line_end":739,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889394,"byte_end":12889397,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889402,"byte_end":12889458,"line_start":741,"line_end":741,"column_start":5,"column_end":61}},{"value":"/ assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889463,"byte_end":12889500,"line_start":742,"line_end":742,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889505,"byte_end":12889512,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12889517,"byte_end":12889524,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894190,"byte_end":12894197,"line_start":917,"line_end":917,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894135,"byte_end":12894178,"line_start":916,"line_end":916,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894306,"byte_end":12894313,"line_start":922,"line_end":922,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894243,"byte_end":12894294,"line_start":921,"line_end":921,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894431,"byte_end":12894441,"line_start":927,"line_end":927,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894371,"byte_end":12894419,"line_start":926,"line_end":926,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894552,"byte_end":12894560,"line_start":932,"line_end":932,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894484,"byte_end":12894540,"line_start":931,"line_end":931,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894680,"byte_end":12894683,"line_start":937,"line_end":937,"column_start":12,"column_end":15},"name":"key","qualname":"<Expired<T>>::key","value":"pub fn key(&Self) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Returns the key that the expiration is indexed by.\n","sig":null,"attributes":[{"value":"/ Returns the key that the expiration is indexed by.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894614,"byte_end":12894668,"line_start":936,"line_end":936,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":390}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6878,"byte_end":6908,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40807,"byte_end":40816,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1623}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40630,"byte_end":40694,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40695,"byte_end":40778,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41079,"byte_end":41085,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40892,"byte_end":40966,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40971,"byte_end":41041,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41046,"byte_end":41067,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8905,"byte_end":8922,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7687,"byte_end":7764,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7765,"byte_end":7775,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7776,"byte_end":7779,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7780,"byte_end":7845,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7846,"byte_end":7920,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7921,"byte_end":7924,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7925,"byte_end":8008,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8009,"byte_end":8012,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8013,"byte_end":8027,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8028,"byte_end":8031,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8032,"byte_end":8045,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8068,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8069,"byte_end":8109,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8113,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8114,"byte_end":8132,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8133,"byte_end":8154,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8155,"byte_end":8200,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8201,"byte_end":8242,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8243,"byte_end":8246,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8247,"byte_end":8298,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8299,"byte_end":8362,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8363,"byte_end":8384,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8385,"byte_end":8434,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8435,"byte_end":8481,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8482,"byte_end":8503,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8521,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8522,"byte_end":8603,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8604,"byte_end":8626,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8644,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8645,"byte_end":8658,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8659,"byte_end":8670,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8671,"byte_end":8674,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8675,"byte_end":8708,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8709,"byte_end":8784,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8785,"byte_end":8812,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8813,"byte_end":8824,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8825,"byte_end":8828,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8829,"byte_end":8879,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8880,"byte_end":8885,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8886,"byte_end":8893,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9342,"byte_end":9367,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9189,"byte_end":9263,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9264,"byte_end":9281,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9282,"byte_end":9330,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11875,"byte_end":11878,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11800,"byte_end":11863,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13931,"byte_end":13942,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12668,"byte_end":12739,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12744,"byte_end":12777,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12782,"byte_end":12785,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12790,"byte_end":12861,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12866,"byte_end":12898,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12903,"byte_end":12906,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12911,"byte_end":12925,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12930,"byte_end":12933,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12938,"byte_end":12951,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12956,"byte_end":12978,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12983,"byte_end":13023,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13028,"byte_end":13031,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13036,"byte_end":13054,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13059,"byte_end":13080,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13085,"byte_end":13130,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13135,"byte_end":13181,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13186,"byte_end":13189,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13194,"byte_end":13245,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13250,"byte_end":13313,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13318,"byte_end":13339,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13344,"byte_end":13392,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13397,"byte_end":13443,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13448,"byte_end":13469,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13474,"byte_end":13491,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13496,"byte_end":13577,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13582,"byte_end":13604,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13609,"byte_end":13626,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13631,"byte_end":13644,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13649,"byte_end":13660,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13665,"byte_end":13668,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13673,"byte_end":13706,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13711,"byte_end":13786,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13791,"byte_end":13818,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13823,"byte_end":13834,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13839,"byte_end":13842,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13847,"byte_end":13897,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13902,"byte_end":13907,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13912,"byte_end":13919,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16517,"byte_end":16523,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16328,"byte_end":16400,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16405,"byte_end":16425,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16430,"byte_end":16433,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16438,"byte_end":16505,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16651,"byte_end":16663,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16575,"byte_end":16639,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16814,"byte_end":16823,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16728,"byte_end":16802,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17225,"byte_end":17235,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17062,"byte_end":17103,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17108,"byte_end":17111,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17116,"byte_end":17188,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17193,"byte_end":17213,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71395,"byte_end":71405,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71257,"byte_end":71314,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71315,"byte_end":71318,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71319,"byte_end":71366,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72128,"byte_end":72131,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72086,"byte_end":72116,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72846,"byte_end":72856,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72334,"byte_end":72363,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72368,"byte_end":72371,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72376,"byte_end":72452,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72457,"byte_end":72526,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72531,"byte_end":72549,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72554,"byte_end":72557,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72562,"byte_end":72633,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72638,"byte_end":72711,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72716,"byte_end":72790,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72795,"byte_end":72834,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74377,"byte_end":74391,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73280,"byte_end":73361,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73366,"byte_end":73412,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73417,"byte_end":73420,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73425,"byte_end":73473,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73478,"byte_end":73481,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73486,"byte_end":73570,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73575,"byte_end":73634,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73639,"byte_end":73724,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73729,"byte_end":73748,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73753,"byte_end":73832,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73837,"byte_end":73840,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73845,"byte_end":73920,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73925,"byte_end":74001,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74006,"byte_end":74061,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74066,"byte_end":74140,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74145,"byte_end":74218,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74223,"byte_end":74257,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74262,"byte_end":74265,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74270,"byte_end":74346,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74351,"byte_end":74365,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75025,"byte_end":75033,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74777,"byte_end":74842,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74847,"byte_end":74850,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74855,"byte_end":74928,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74933,"byte_end":74943,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74948,"byte_end":74951,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74956,"byte_end":75013,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75145,"byte_end":75154,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75087,"byte_end":75133,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75495,"byte_end":75506,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75296,"byte_end":75330,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75335,"byte_end":75338,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75343,"byte_end":75416,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75421,"byte_end":75483,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75811,"byte_end":75820,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75611,"byte_end":75646,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75651,"byte_end":75654,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75659,"byte_end":75732,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75737,"byte_end":75799,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76520,"byte_end":76537,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75971,"byte_end":76040,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76045,"byte_end":76048,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76053,"byte_end":76123,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76128,"byte_end":76201,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76206,"byte_end":76252,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76257,"byte_end":76260,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76265,"byte_end":76340,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76345,"byte_end":76419,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76424,"byte_end":76450,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76455,"byte_end":76458,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76463,"byte_end":76508,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76703,"byte_end":76713,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76590,"byte_end":76637,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76642,"byte_end":76645,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76650,"byte_end":76691,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79225,"byte_end":79238,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79094,"byte_end":79167,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79168,"byte_end":79171,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79172,"byte_end":79213,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79432,"byte_end":79435,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79387,"byte_end":79420,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79599,"byte_end":79604,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79562,"byte_end":79587,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79710,"byte_end":79721,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79656,"byte_end":79698,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79836,"byte_end":79846,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79791,"byte_end":79824,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80580,"byte_end":80592,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79907,"byte_end":79955,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79960,"byte_end":79963,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79968,"byte_end":80009,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80014,"byte_end":80017,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80022,"byte_end":80084,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80089,"byte_end":80149,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80154,"byte_end":80214,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80219,"byte_end":80222,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80227,"byte_end":80302,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80307,"byte_end":80375,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80380,"byte_end":80456,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80461,"byte_end":80529,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80534,"byte_end":80568,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82020,"byte_end":82037,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81736,"byte_end":81788,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81793,"byte_end":81796,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81801,"byte_end":81877,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81882,"byte_end":81916,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81921,"byte_end":81924,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81929,"byte_end":82008,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82497,"byte_end":82508,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82110,"byte_end":82152,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82157,"byte_end":82160,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82165,"byte_end":82238,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82243,"byte_end":82283,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82288,"byte_end":82291,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82296,"byte_end":82366,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82371,"byte_end":82405,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82410,"byte_end":82413,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82418,"byte_end":82485,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83651,"byte_end":83668,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83451,"byte_end":83508,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83509,"byte_end":83512,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83513,"byte_end":83580,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83581,"byte_end":83639,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83846,"byte_end":83849,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83763,"byte_end":83834,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84430,"byte_end":84433,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84215,"byte_end":84267,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84272,"byte_end":84275,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84280,"byte_end":84352,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84357,"byte_end":84418,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84876,"byte_end":84883,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84635,"byte_end":84687,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84692,"byte_end":84695,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84700,"byte_end":84773,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84778,"byte_end":84848,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84853,"byte_end":84864,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86723,"byte_end":86730,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86659,"byte_end":86711,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87016,"byte_end":87020,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86961,"byte_end":87004,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":1705},{"krate":0,"index":1714},{"krate":0,"index":1718},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88133,"byte_end":88168,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90115,"byte_end":90119,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90128,"byte_end":90133,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90096,"byte_end":90102,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1708},{"krate":0,"index":1711}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88345,"byte_end":88451,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88452,"byte_end":88455,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88456,"byte_end":88546,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88547,"byte_end":88550,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88551,"byte_end":88586,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88587,"byte_end":88590,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88591,"byte_end":88604,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88605,"byte_end":88608,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88609,"byte_end":88646,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88647,"byte_end":88650,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88651,"byte_end":88670,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88671,"byte_end":88713,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88714,"byte_end":88764,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88765,"byte_end":88816,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88817,"byte_end":88835,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88836,"byte_end":88857,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88858,"byte_end":88900,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88901,"byte_end":88934,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88935,"byte_end":88951,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88952,"byte_end":89046,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89047,"byte_end":89057,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89058,"byte_end":89061,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89062,"byte_end":89109,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89110,"byte_end":89115,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89116,"byte_end":89123,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89124,"byte_end":89127,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89328,"byte_end":89331,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89332,"byte_end":89418,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89419,"byte_end":89429,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89430,"byte_end":89433,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89434,"byte_end":89441,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89442,"byte_end":89477,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89478,"byte_end":89520,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89521,"byte_end":89571,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89572,"byte_end":89623,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89624,"byte_end":89627,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89628,"byte_end":89646,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89647,"byte_end":89668,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89669,"byte_end":89711,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89712,"byte_end":89759,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89760,"byte_end":89776,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89777,"byte_end":89826,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89827,"byte_end":89837,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89838,"byte_end":89841,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89842,"byte_end":89875,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89876,"byte_end":89916,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89917,"byte_end":89949,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89950,"byte_end":89955,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89956,"byte_end":89963,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89964,"byte_end":89986,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754841,"byte_end":12754851,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12755002,"byte_end":12755012,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12755339,"byte_end":12755349,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12765579,"byte_end":12765588,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12765820,"byte_end":12765830,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12765981,"byte_end":12765990,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12766345,"byte_end":12766355,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12766601,"byte_end":12766609,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12766706,"byte_end":12766714,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12766825,"byte_end":12766833,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12766933,"byte_end":12766941,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12767051,"byte_end":12767061,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12775348,"byte_end":12775358,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778194,"byte_end":12778200,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782056,"byte_end":12782062,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12787377,"byte_end":12787383,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12787699,"byte_end":12787705,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12788420,"byte_end":12788426,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789466,"byte_end":12789477,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12790404,"byte_end":12790414,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791343,"byte_end":12791353,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12793450,"byte_end":12793460,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12793773,"byte_end":12793783,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12794509,"byte_end":12794519,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12795498,"byte_end":12795509,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12795865,"byte_end":12795876,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797985,"byte_end":12797996,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12798760,"byte_end":12798771,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12799012,"byte_end":12799023,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814038,"byte_end":12814058,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12817392,"byte_end":12817412,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12818298,"byte_end":12818318,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819659,"byte_end":12819679,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819772,"byte_end":12819779,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12829378,"byte_end":12829385,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12829511,"byte_end":12829536,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12829694,"byte_end":12829719,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12829854,"byte_end":12829879,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12830948,"byte_end":12830958,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12833500,"byte_end":12833510,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12836886,"byte_end":12836896,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837219,"byte_end":12837229,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837536,"byte_end":12837551,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837833,"byte_end":12837848,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837965,"byte_end":12837980,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840306,"byte_end":12840323,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842972,"byte_end":12842989,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12846281,"byte_end":12846298,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12846662,"byte_end":12846679,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12847097,"byte_end":12847119,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12847448,"byte_end":12847470,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12847601,"byte_end":12847623,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/level.rs","byte_start":12859041,"byte_end":12859046,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/level.rs","byte_start":12863797,"byte_end":12863802,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/mod.rs","byte_start":12850272,"byte_end":12850277,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872263,"byte_end":12872273,"line_start":213,"line_end":213,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1485},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12891211,"byte_end":12891221,"line_start":800,"line_end":800,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12891249,"byte_end":12891259,"line_start":802,"line_end":802,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12891369,"byte_end":12891379,"line_start":808,"line_end":808,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12891761,"byte_end":12891766,"line_start":818,"line_end":818,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12893893,"byte_end":12893898,"line_start":900,"line_end":900,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894028,"byte_end":12894031,"line_start":909,"line_end":909,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894118,"byte_end":12894125,"line_start":915,"line_end":915,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":511}},{"kind":"Mod","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":12753253,"byte_end":12753269,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":954}},{"kind":"Mod","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":872,"byte_end":876,"line_start":49,"line_end":49,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1331}},{"kind":"Mod","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/mod.rs","byte_start":12848023,"byte_end":12848034,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1414}},{"kind":"Mod","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12754841,"byte_end":12754851,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12755002,"byte_end":12755012,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":12755339,"byte_end":12755349,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12765579,"byte_end":12765588,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12765820,"byte_end":12765830,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12765981,"byte_end":12765990,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12766345,"byte_end":12766355,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12766601,"byte_end":12766609,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2615}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12766706,"byte_end":12766714,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2618}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12766825,"byte_end":12766833,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2615}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12766933,"byte_end":12766941,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2618}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12767051,"byte_end":12767061,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1845},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":12775348,"byte_end":12775358,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1845},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12778194,"byte_end":12778200,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12782056,"byte_end":12782062,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12787377,"byte_end":12787383,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1804},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12787699,"byte_end":12787705,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1804},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12788420,"byte_end":12788426,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1804},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":12789466,"byte_end":12789477,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12790404,"byte_end":12790414,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12791343,"byte_end":12791353,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12793450,"byte_end":12793460,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1763},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12793773,"byte_end":12793783,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1763},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":12794509,"byte_end":12794519,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12795498,"byte_end":12795509,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12795865,"byte_end":12795876,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12797985,"byte_end":12797996,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1722},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12798760,"byte_end":12798771,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1722},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":12799012,"byte_end":12799023,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1722},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12814038,"byte_end":12814058,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12817392,"byte_end":12817412,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12818298,"byte_end":12818318,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819659,"byte_end":12819679,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12819772,"byte_end":12819779,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12829378,"byte_end":12829385,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1239},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12829511,"byte_end":12829536,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1008},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12829694,"byte_end":12829719,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1008},"to":{"krate":2,"index":9410}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":12829854,"byte_end":12829879,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1008},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12830948,"byte_end":12830958,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12833500,"byte_end":12833510,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12836886,"byte_end":12836896,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837219,"byte_end":12837229,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837536,"byte_end":12837551,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":9410}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837833,"byte_end":12837848,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":12837965,"byte_end":12837980,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1291},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12840306,"byte_end":12840323,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12842972,"byte_end":12842989,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1299},"to":{"krate":0,"index":561}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12846281,"byte_end":12846298,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1299},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12846662,"byte_end":12846679,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1299},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12847097,"byte_end":12847119,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":9410}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12847448,"byte_end":12847470,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":12847601,"byte_end":12847623,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1323},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/level.rs","byte_start":12859041,"byte_end":12859046,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/level.rs","byte_start":12863797,"byte_end":12863802,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/stack.rs","byte_start":12864912,"byte_end":12864919,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":1376}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/wheel/mod.rs","byte_start":12850272,"byte_end":12850277,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12872263,"byte_end":12872273,"line_start":213,"line_end":213,"column_start":9,"column_end":19},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12891211,"byte_end":12891221,"line_start":800,"line_end":800,"column_start":19,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1568},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12891249,"byte_end":12891259,"line_start":802,"line_end":802,"column_start":21,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1568},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12891369,"byte_end":12891379,"line_start":808,"line_end":808,"column_start":34,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1568},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12891761,"byte_end":12891766,"line_start":818,"line_end":818,"column_start":26,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1605},"to":{"krate":0,"index":1376}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12893893,"byte_end":12893898,"line_start":900,"line_end":900,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894028,"byte_end":12894031,"line_start":909,"line_end":909,"column_start":6,"column_end":9},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/time/delay_queue.rs","byte_start":12894118,"byte_end":12894125,"line_start":915,"line_end":915,"column_start":9,"column_end":16},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1622},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12717}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1697},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1697},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":301},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":12717}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":12717}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1705},"to":{"krate":20,"index":227}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1705},"to":{"krate":20,"index":185}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1705},"to":{"krate":20,"index":266}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1705},"to":{"krate":20,"index":306}},{"span":{"file_name":"/Users/samundrakarki/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1705},"to":{"krate":18,"index":96}}]}